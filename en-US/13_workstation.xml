<?xml version="1.0"?>
<chapter id="workstation">
  <chapterinfo>
    <mediaobject condition="pdf">
      <imageobject>
        <imagedata fileref="images/chap-workstation.png" scalefit="1"/>
      </imageobject>
    </mediaobject>
    <keywordset>
      <keyword>Workstation</keyword>
      <keyword>Graphical desktop</keyword>
      <keyword>Office work</keyword>
      <keyword>X.org</keyword>
    </keywordset>
  </chapterinfo>
  <title>Workstation</title>
  <highlights>
    <para>Now that server deployments are done, the administrators can
    focus on installing the individual workstations and creating a typical
    configuration.</para>
  </highlights>

  <section id="sect.x11-server-configuration">
    <title>Configuring the X11 Server</title>
    <indexterm><primary>XFree86</primary><seealso>X.org</seealso></indexterm>
    <indexterm><primary>X.org</primary></indexterm>
    <indexterm><primary>X11</primary><seealso>X.org</seealso></indexterm>
    <indexterm><primary>interface</primary><secondary>graphical</secondary></indexterm>

    <!-- MAYCHANGE: Debian suite name -->
    <para>A brief reminder: X.org is the software component that allows
    graphical applications to display windows on screen. It includes a
    driver that makes efficient use of the video card. The features offered
    to the graphical applications are exported through a standard
    interface, <emphasis>X11</emphasis> (<emphasis
    role="distribution">Bullseye</emphasis> contains version
    <emphasis>X11R7.7</emphasis>).</para>

    <sidebar>
      <title><emphasis>PERSPECTIVE</emphasis> X11, XFree86 and X.org</title>
      <indexterm><primary>server</primary><secondary>X</secondary></indexterm>
      <indexterm><primary>server</primary><secondary>graphical</secondary></indexterm>

      <para>X11 is the graphical system most widely used on Unix-like
      systems (also available for
      Windows and Mac OS). Strictly speaking, the term “X11” only
      refers to a protocol specification, but it is also used to refer to
      the implementation in practice.</para>

      <!-- MAYCHANGE: Debian suite name -->
      <para>X11 had a rough start, but the 1990s saw XFree86 emerge as the
      reference implementation because it was free software, portable, and
      maintained by a collaborative community. However, the rate of
      evolution slowed down near the end when the software only gained new
      drivers. That situation, along with a very controversial license
      change, led to the X.org fork in 2004. This is now the reference
      implementation, and Debian <emphasis
      role="distribution">Bullseye</emphasis> uses X.org version 7.7.</para>
    </sidebar>

    <para>Current versions of X.org are able to autodetect the available
    hardware: this applies to the video card and the monitor, as well as
    keyboards and mice; in fact, it is so convenient that the package no
    longer even creates a <filename>/etc/X11/xorg.conf</filename>
    configuration file.</para>

    <indexterm><primary><filename>/etc</filename></primary><secondary><filename>/etc/X11/</filename></secondary><see>X.org</see></indexterm>
    <indexterm><primary>resolution</primary></indexterm>

    <para>The keyboard configuration is currently set up in
    <filename>/etc/default/keyboard</filename>. This file is used both to
    configure the text console and the graphical interface, and it is
    handled by the <emphasis role="pkg">keyboard-configuration</emphasis>
    package. Details on configuring the keyboard layout are available in
    <xref linkend="sect.keyboard-config"/>.</para>

    <indexterm><primary><filename>/etc</filename></primary><secondary><filename>/etc/default/keyboard</filename></secondary></indexterm>

    <para>The <emphasis role="pkg">xserver-xorg-core</emphasis> package provides
    a generic X server, as used by the 7.x versions of X.org. This server
    is modular and uses a set of independent drivers to handle the many
    different kinds of video cards. Installing <emphasis
    role="pkg">xserver-xorg</emphasis> ensures that both the server and
    at least one video driver are installed.</para>

    <indexterm><primary>server</primary><secondary>X</secondary></indexterm>
    <indexterm><primary><emphasis role="pkg">xserver-xorg</emphasis></primary></indexterm>

    <para>Note that if the detected video card is not handled by any of the
    available drivers, X.org tries using the <literal>vesa</literal> and
    <literal>fbdev</literal> drivers. VESA is a generic driver that should work
    everywhere, but with limited capabilities (fewer available resolutions, no
    hardware acceleration for games and visual effects for the desktop, and so
    on) while <literal>fbdev</literal> works on top of the kernel's framebuffer
    device. Nowadays the X server can run without any administrative privileges
    (this used to be required to be able to configure the screen) and its log
    file is then stored in the user's home directory in
    <filename>~/.local/share/xorg/Xorg.0.log</filename>, whereas it is
    <filename>/var/log/Xorg.0.log</filename> for X servers started with root
    privileges and for versions older than Debian 9 <emphasis
    role="distribution">Stretch</emphasis>. That log file is where one would
    look to know what driver is currently in use. For example, the following
    snippet matches what the <literal>intel</literal> driver outputs when it is
    loaded:</para>

    <indexterm><primary>VESA</primary></indexterm>
    <indexterm><primary>X.org</primary><secondary><literal>fbdev</literal></secondary></indexterm>
    <indexterm><primary>X.org</primary><secondary><literal>vesa</literal></secondary></indexterm>
    <indexterm><primary><literal>fbdev</literal></primary></indexterm>
    <indexterm><primary><literal>vesa</literal></primary></indexterm>
    <indexterm><primary>X.org</primary><secondary><filename>Xorg.0.log</filename></secondary></indexterm>
    <indexterm><primary><filename>Xorg.0.log</filename></primary></indexterm>

    <programlisting>
(==) Matched nouveau as autoconfigured driver 0
(==) Matched modesetting as autoconfigured driver 1
(==) Matched fbdev as autoconfigured driver 2
(==) Matched vesa as autoconfigured driver 3
(==) Assigned the driver to the xf86ConfigLayout
(II) LoadModule: "intel"
(II) Loading /usr/lib/xorg/modules/drivers/intel_drv.so
(II) Module intel: vendor="X.Org Foundation"
</programlisting>

    <indexterm><primary>video card</primary></indexterm>

    <sidebar>
      <title><emphasis>EXTRA</emphasis> Proprietary drivers</title>

      <para>Some video card makers (most notably NVIDIA) refuse to publish
      the hardware specifications that would be required to implement good
      free drivers. They do, however, provide proprietary drivers that
      allow using their hardware. This policy is nefarious, because even
      when the provided driver exists, it is usually not as polished as it
      should be; more importantly, it does not necessarily follow the X.org
      updates, which may prevent the latest available driver from loading
      correctly (or at all). We cannot condone this behavior, and we
      recommend you avoid these makers and favor more cooperative
      manufacturers.</para>

      <para>If you still end up with such a card, you will find the
      required packages in the <emphasis>non-free</emphasis> section:
      <emphasis role="pkg">nvidia-driver</emphasis> for NVIDIA cards.
      It requires a matching kernel module. Building the module can be
      automated by installing the package <emphasis
      role="pkg">nvidia-kernel-dkms</emphasis> (for NVIDIA).</para>

      <para>The <literal>nouveau</literal> project aims to develop a free
      software driver for NVIDIA cards and is the default driver that you get
      for those cards in Debian. In general, its feature set and performance do
      not match the proprietary driver. In the developers' defense, we should
      mention that the required information can only be gathered by reverse
      engineering, which makes things difficult.  The free drivers for ATI
      video cards, called <literal>radeon</literal> and
      <literal>amdgpu</literal>, are much better in that regard although it
      often requires non-free firmware from the <emphasis
      role="pkg">firmware-amd-graphics</emphasis> package.</para>

      <indexterm><primary>ATI</primary></indexterm>
      <indexterm><primary>NVIDIA</primary></indexterm>
      <indexterm><primary>X.org</primary><secondary><literal>nouveau</literal></secondary></indexterm>
      <indexterm><primary>X.org</primary><secondary><literal>radeon</literal></secondary></indexterm>
      <indexterm><primary>X.org</primary><secondary><literal>amdgpu</literal></secondary></indexterm>
    </sidebar>
  </section>

  <section id="sect.customizing-graphical-interface">
    <title>Customizing the Graphical Interface</title>
    <section>
      <title>Choosing a Display Manager</title>
      <indexterm><primary>manager</primary><secondary>display manager</secondary></indexterm>
      <indexterm><primary>display manager</primary><secondary>gdm3</secondary></indexterm>
      <indexterm><primary>display manager</primary><secondary>sddm</secondary></indexterm>
      <indexterm><primary>display manager</primary><secondary>xdm</secondary></indexterm>
      <indexterm><primary>display manager</primary><secondary>lightdm</secondary></indexterm>
      <indexterm><primary>display manager</primary><secondary>x-display-manager</secondary></indexterm>
      <indexterm><primary><command>gdm3</command></primary></indexterm>
      <indexterm><primary><command>sddm</command></primary></indexterm>
      <indexterm><primary><command>xdm</command></primary></indexterm>
      <indexterm><primary><command>lightdm</command></primary></indexterm>
      <indexterm><primary>x-display-manager</primary></indexterm>

      <para>The graphical interface only provides display space. Running the X
      server by itself only leads to an empty screen, which is why most
      installations use a <emphasis>display manager</emphasis> to display a
      user authentication screen and start the graphical desktop once the user
      has authenticated. The three most popular display managers in current use
      are <emphasis role="pkg">gdm3</emphasis> (<foreignphrase>GNOME Display
      Manager</foreignphrase>), <emphasis role="pkg">sddm</emphasis> (suggested
      for KDE Plasma) and <emphasis role="pkg">lightdm</emphasis>
      (<foreignphrase>Light Display Manager</foreignphrase>). More
      alternatives exist and can be found by searching for the <emphasis
      role="pkg">x-display-manager</emphasis> virtual package.</para>

      <para>Since the Falcot Corp administrators
      have opted to use the GNOME desktop environment, they logically
      picked <command>gdm3</command> as a display manager too. The
      <filename>/etc/gdm3/daemon.conf</filename> configuration file
      has many options (the list can be found in the
      <filename>/usr/share/gdm/gdm.schemas</filename> schema file)
      to control its behaviour while
      <filename>/etc/gdm3/greeter.dconf-defaults</filename> contains
      settings for the greeter “session” (more than just a login
      window, it is a limited desktop with power management and
      accessibility related tools). Note that some of the most
      useful settings for end-users can be tweaked with GNOME's
      control center.</para>

      <indexterm><primary><filename>/etc</filename></primary><secondary><filename>/etc/gdm3/daemon.conf</filename></secondary></indexterm>
      <indexterm><primary><filename>/etc</filename></primary><secondary><filename>/etc/gdm3/greeter.dconf-defaults</filename></secondary></indexterm>
    </section>
    <section>
      <title>Choosing a Window Manager</title>
      <indexterm><primary>manager</primary><secondary>window manager</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>x-window-manager</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>mutter</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>kwin</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>xfwm</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>openbox</secondary></indexterm>

      <para>Since each graphical desktop provides its own window
      manager, which window manager you choose is usually influenced by
      which desktop you have selected.  GNOME uses the
      <command>mutter</command> window
      manager, Plasma uses <command>kwin</command>, and Xfce (which
      we present later) has <command>xfwm</command>. The Unix
      philosophy always allows using one's window manager of choice,
      but following the recommendations allows an administrator to
      best take advantage of the integration efforts led by each
      project.</para>

      <indexterm><primary><command>mutter</command></primary></indexterm>
      <indexterm><primary><command>kwin</command></primary></indexterm>
      <indexterm><primary><command>xfwm</command></primary></indexterm>
      <indexterm><primary><command>openbox</command></primary></indexterm>

      <sidebar>
        <title><emphasis>BACK TO BASICS</emphasis> Window manager</title>
        <indexterm><primary>manager</primary><secondary>window</secondary></indexterm>
        <indexterm><primary><emphasis>window manager</emphasis></primary></indexterm>

        <para>The window manager displays the “decorations” around
        the windows belonging to the currently running applications, which
        includes frames and the title bar. It also allows reducing,
        restoring, maximizing, and hiding windows. Most window managers
        also provide a menu that pops up when the desktop is clicked in a
        specific way. This menu provides the means to close the window
        manager session, start new applications, and in some cases,
        change to another window manager (if installed).</para>
      </sidebar>

      <para>Older computers may, however, have a hard time running heavyweight
      graphical desktop environments. In these cases, a lighter alternative
      (search for the <emphasis role="pkg">x-window-manager</emphasis> virtual
      package) should be used. “Light” (or small footprint) window managers
      include WindowMaker (in the <emphasis role="pkg">wmaker</emphasis>
      package), <emphasis role="pkg">afterstep</emphasis>, <emphasis
      role="pkg">icewm</emphasis>, <emphasis role="pkg">blackbox</emphasis>,
      <emphasis role="pkg">fluxbox</emphasis>, or <emphasis
      role="pkg">openbox</emphasis>. In these cases, the system should be
      configured so that the appropriate window manager gets precedence; the
      standard way is to change the <command>x-window-manager</command>
      alternative with the command <command>update-alternatives --config
      x-window-manager</command>.</para>

      <indexterm><primary>window manager</primary><secondary>wmaker</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>afterstep</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>blackbox</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>icewm</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>fluxbox</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>openbox</secondary></indexterm>
      <indexterm><primary>window manager</primary><secondary>x-window-manager</secondary></indexterm>
      <indexterm><primary>WindowMaker</primary></indexterm>
      <indexterm><primary>afterstep</primary></indexterm>
      <indexterm><primary>blackbox</primary></indexterm>
      <indexterm><primary>icewm</primary></indexterm>
      <indexterm><primary>fluxbox</primary></indexterm>
      <indexterm><primary>openbox</primary></indexterm>
      <indexterm><primary><command>x-window-manager</command></primary></indexterm>

      <sidebar id="sidebar.alternatives">
        <title><emphasis>DEBIAN SPECIFICITY</emphasis> Alternatives</title>
        <indexterm><primary><emphasis>alternative</emphasis></primary></indexterm>
        <indexterm><primary>choice</primary></indexterm>
        <indexterm><primary><command>update-alternatives</command></primary></indexterm>

        <para>The Debian policy lists a number of standardized commands
        able to perform a particular action. For example, the
        <command>x-window-manager</command> command invokes a window
        manager. But Debian does not assign this command to a fixed window
        manager. The administrator can choose which manager it should
        invoke.</para>

        <para>For each window manager, the relevant package therefore
        registers the appropriate command as a possible choice for
        <command>x-window-manager</command> along with an associated
        priority. Barring explicit configuration by the administrator, this
        priority allows picking the best installed window manager when the
        generic command is run.</para>

        <para>Both the registration of commands and the explicit configuration
        involve the <command>update-alternatives</command> script. Choosing
        where a symbolic command points at is a simple matter of running
        <command>update-alternatives --config
        <replaceable>symbolic-command</replaceable></command>. This script
        creates (and maintains) symbolic links in the
        <filename>/etc/alternatives/</filename> directory, which in turn
        references the location of the executable. As time passes, packages are
        installed or removed, and/or the administrator makes explicit changes
        to the configuration. When a package providing an alternative is
        removed, the alternative automatically goes to the next best choice
        among the remaining possible commands.</para>

        <indexterm><primary><filename>/etc</filename></primary><secondary><filename>/etc/alternatives/</filename></secondary></indexterm>

        <para>Not all symbolic commands are explicitly listed by the Debian
        policy; some Debian package maintainers deliberately chose to use
        this mechanism in less straightforward cases where it still brings
        interesting flexibility (examples include
        <command>x-www-browser</command>, <command>www-browser</command>,
        <command>cc</command>, <command>c++</command>,
        <command>awk</command>, and so on).</para>

        <indexterm><primary><command>x-www-browser</command></primary></indexterm>
        <indexterm><primary><command>www-browser</command></primary></indexterm>
        <indexterm><primary><command>cc</command></primary></indexterm>
        <indexterm><primary><command>c++</command></primary></indexterm>
        <indexterm><primary><command>awk</command></primary></indexterm>
      </sidebar>
    </section>

    <section>
      <title>Menu Management</title>
      <indexterm><primary><command>menu</command></primary></indexterm>
      <indexterm><primary><command>update-menus</command></primary></indexterm>
      <indexterm><primary><filename>.desktop</filename></primary></indexterm>

      <para>Modern desktop environments and many window managers provide
      menus listing the available applications for the user. In order to
      keep menus up-to-date in relation to the actual set of available
      applications, each package usually provides a <filename>.desktop</filename>
      file in <filename>/usr/share/applications</filename>. The format
      of those files has been standardized by FreeDesktop.org:
      <ulink type="block" url="https://specifications.freedesktop.org/desktop-entry-spec/latest/"/>
      </para>

      <para>The applications menus can be further customized by administrators
      through system-wide configuration files as described by the “Desktop Menu
      Specification”. End-users can also customize the menus with graphical
      tools such as <emphasis role="pkg">kmenuedit</emphasis> (in Plasma),
      <emphasis role="pkg">alacarte</emphasis> (in GNOME) or <emphasis
      role="pkg">menulibre</emphasis>.
      <ulink type="block" url="https://specifications.freedesktop.org/menu-spec/latest/"/>
      </para>

      <sidebar>
        <title><emphasis>HISTORY</emphasis> The Debian menu system</title>

        <para>Historically — way before the FreeDesktop.org standards emerged
        — Debian had invented its own menu system where each package provided a
        generic description of the desired menu entries in
        <filename>/usr/share/menu/</filename>. This tool is still available in
        Debian (in the <emphasis role="pkg">menu</emphasis> package) but it is
        only marginally useful since package maintainers are encouraged to rely
        on <filename>.desktop</filename> files instead.</para>

        <indexterm><primary><filename>.menu</filename></primary></indexterm>
      </sidebar>

    </section>
  </section>

  <section id="sect.graphical-desktops">
    <title>Graphical Desktops</title>

    <para>The free graphical desktop field is dominated by two large software
    collections: GNOME and Plasma by KDE. Both of them are very popular.</para>

    <indexterm><primary>graphical desktop</primary></indexterm>
    <indexterm><primary>GNOME</primary></indexterm>
    <indexterm><primary>KDE</primary></indexterm>
    <indexterm><primary>GTK+</primary></indexterm>
    <indexterm><primary>Qt</primary></indexterm>

    <para>This diversity is rooted in history. Plasma (initially only KDE,
    which is now the name of the community) was the first graphical desktop
    project, but it chose the Qt graphical toolkit and that choice
    wasn't acceptable for a large number of developers. Qt was not free
    software at the time, and GNOME was started based on the GTK+ toolkit.
    Qt has since become free software, but the projects still evolved in
    parallel.</para>

    <para>The GNOME and KDE communities still work together: under the FreeDesktop.org
    umbrella, the projects collaborated in defining standards for
    interoperability across applications.</para>

    <indexterm><primary>FreeDesktop.org</primary></indexterm>

    <para>Choosing “the best” graphical desktop is a sensitive topic
    which we prefer to steer clear of. We will merely describe the many
    possibilities and give a few pointers for further thoughts. The best
    choice will be the one you make after some experimentation.</para>

    <section id="sect.gnome-desktop">
      <title>GNOME</title>

      <!-- MAYCHANGE: distribution name and GNOME version -->
      <para>Debian <emphasis role="distribution">Bullseye</emphasis>
      includes GNOME version 3.38, which can be installed by a simple
      <command>apt install gnome</command> (it can also be installed by
      selecting the “Debian desktop environment” task - <emphasis
      role="pkg">task-desktop</emphasis> and <emphasis
      role="pkg">task-gnome-desktop</emphasis>).</para>

      <indexterm><primary><emphasis role="pkg">gnome</emphasis></primary></indexterm>

      <para>GNOME is noteworthy for its efforts in usability and
      accessibility. Design professionals have been involved in writing
      its standards and recommendations, which has helped developers to create
      satisfying graphical user interfaces. The project also gets
      encouragement from the big players of computing, such as Intel, IBM,
      Oracle, Novell, and of course, various Linux distributions. Finally,
      many programming languages can be used in developing applications
      interfacing to GNOME.</para>

      <figure>
        <title>The GNOME desktop</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/gnome.png" scalefit="1" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>For administrators, GNOME seems to be better prepared for
      massive deployments. Application configuration is handled through
      the GSettings interface and stores its data in the DConf database.
      The configuration settings can thus be queried and edited with the
      <command>gsettings</command>, and <command>dconf</command>
      command-line tools, or by the <command>dconf-editor</command>
      graphical user interfaces. The administrator can therefore change
      users' configuration with a simple script. The GNOME website
      provides information to guide administrators who
      manage GNOME workstations:
      <ulink type="block" url="https://help.gnome.org/admin/"/>
      </para>

      <indexterm><primary><command>gsettings</command></primary></indexterm>
      <indexterm><primary><command>dconf</command></primary></indexterm>
      <indexterm><primary><command>dconf-editor</command></primary></indexterm>
    </section>

    <section>
      <title>KDE and Plasma</title>

      <!-- MAYCHANGE: distribution name and KDE Plasma version -->
      <para>Debian <emphasis role="distribution">Bullseye</emphasis>
      includes version 5.20 of KDE Plasma, which can be installed with
      <command>apt install kde-standard</command> (<emphasis
      role="pkg">task-kde-desktop</emphasis>).</para>

      <para>Plasma has had a rapid evolution based on a very hands-on
      approach. Its authors quickly got very good results, which allowed
      them to grow a large user-base. These factors contributed to the
      overall project quality. Plasma is a mature desktop
      environment with a wide range of applications.</para>

      <figure>
        <title>The Plasma desktop</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/kde.png" scalefit="1" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>Since the Qt 4.0 release, the last remaining license problem
      with KDE software has been solved. This version was released under the GPL both
      for Linux and Windows (the Windows version was previously
      released under a non-free license). KDE applications are primarily
      developed using the C++ language.</para>
    </section>

    <section>
      <title>Xfce and Others</title>

      <para>Xfce is a simple and lightweight graphical desktop, which is a
      perfect match for computers with limited resources. It can be installed
      with <command>apt install xfce4</command> (<emphasis
      role="pkg">task-xfce-desktop</emphasis>). Like GNOME, Xfce is based on
      the GTK+ toolkit, and several components are common across both
      desktops.</para>

      <indexterm><primary>Xfce</primary></indexterm>

      <para>Unlike GNOME and Plasma, Xfce does not aim to become a vast
      project. Beyond the basic components of a modern desktop (file manager,
      window manager, session manager, a panel for application launchers and so
      on), it only provides a few specific applications: a terminal, a calendar
      (<emphasis role="pkg">orage</emphasis>), an image viewer, a CD/DVD
      burning tool, a media player (<emphasis role="pkg">parole</emphasis>),
      sound volume control and a text editor (<emphasis
        role="pkg">mousepad</emphasis>).
      <ulink type="block" url="https://xfce.org/"/>
      </para>

      <figure>
        <title>The Xfce desktop</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/xfce.png" scalefit="1" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Other Desktop Environments</title>

      <para><emphasis>LXDE</emphasis> and <emphasis>LXQt</emphasis> are two
      desktop environments focusing on the “lightweight” aspect. The former is
      GTK+ based while the latter is Qt based. They can be installed with the
      <emphasis role="pkg">lxde</emphasis> (<emphasis
      role="pkg">task-lxde-desktop</emphasis>), and <emphasis
      role="pkg">lxqt</emphasis> (<emphasis
      role="pkg">task-lxqt-desktop</emphasis>) metapackages.
      
      <ulink type="block" url="https://lxde.org/"/>
      <ulink type="block" url="https://lxqt.org/"/>
      </para>

      <indexterm><primary>LXDE</primary></indexterm>
      <indexterm><primary>LXQt</primary></indexterm>

      <figure>
        <title>The LXDE desktop</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/lxde.png" scalefit="1" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <figure>
        <title>The LXQT desktop</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/lxqt.png" scalefit="1" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para><emphasis>Cinnamon</emphasis> and <emphasis>MATE</emphasis> both
      started when GNOME 3 moved away from the traditional desktop paradigm,
      dropping the usual panel and its menu in favor of the new search-based
      shell. The former reintroduced a panel by forking GNOME Shell and the
      latter is a continuation of GNOME 2.  They can be installed with the
      <emphasis role="pkg">cinnamon-desktop-environment</emphasis> (<emphasis
      role="pkg">task-cinnamon-desktop</emphasis>) and <emphasis
      role="pkg">mate-desktop-environment</emphasis> (<emphasis
      role="pkg">task-mate-desktop</emphasis>) metapackages

      <ulink type="block" url="https://developer.linuxmint.com/projects/cinnamon-projects.html"/>
      <ulink type="block" url="https://mate-desktop.org/"/>
      </para>

      <indexterm><primary>Cinnamon</primary></indexterm>
      <indexterm><primary>MATE</primary></indexterm>

      <figure>
        <title>The Cinnamon desktop</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/cinnamon.png" scalefit="1" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <figure>
        <title>The MATE desktop</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/mate.png" scalefit="1" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>

    </section>
  </section>

  <section id="sect.main-desktop-tools">
    <title>Email</title>
    <indexterm><primary>email</primary><secondary>software</secondary></indexterm>

    <section>
      <title>Evolution</title>
      <indexterm><primary>Evolution</primary></indexterm>
      <indexterm><primary>email</primary><secondary><emphasis role="pkg">evolution</emphasis></secondary></indexterm>

      <sidebar>
        <title><emphasis>COMMUNITY</emphasis> <emphasis>Popular</emphasis> packages</title>

        <para>Installing the <emphasis role="pkg">popularity-contest</emphasis>
        package enables participation in an automated survey that informs the
        Debian project about the most popular packages. A script is run weekly
        by <command>cron</command> which sends an anonymized list of the
        installed packages (by HTTP or email) and the latest access date for
        the files they contain. This allows the Debian maintainers to know
        which packages are most frequently installed, and of these, how
        frequently they are actually used.</para>

        <indexterm><primary><emphasis role="pkg">popularity-contest</emphasis></primary></indexterm>
        <indexterm><primary>popularity of packages</primary></indexterm>
        <indexterm><primary>package</primary><secondary>popularity</secondary></indexterm>

        <para>This information is a great help to the Debian project. It
        is used to determine which packages should go on the first
        installation disks. The installation data is also an important
        factor used to decide whether to remove a package with very few
        users from the distribution. We heartily recommend installing the
        <emphasis role="pkg">popularity-contest</emphasis> package, and
        participating in the survey.</para>

        <para>The collected data are made public every day.
        <ulink type="block" url="https://popcon.debian.org/"/></para>

        <para>These statistics can also help users to choose between two
        packages that seem otherwise equivalent. Choosing the more popular
        package is probably a safer choice.</para>
      </sidebar>

      <para>Evolution is the GNOME email client and can be installed with
      <command>apt install evolution</command>. It is more than
      a simple email client: it also provides a calendar, an address
      book, a task list, and a memo (free-form note) application. Its
      email component includes a powerful message indexing system, and
      allows for the creation of virtual folders based on search queries
      on all archived messages. In other words, all messages are stored
      the same way but displayed in a folder-based organization, each
      folder containing messages that match a set of filtering
      criteria.</para>

      <figure>
        <title>The Evolution email software</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/evolution.png" scalefit="1" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>

      <para>An extension to Evolution allows integration with a Microsoft
      Exchange email system; the required package is <emphasis
      role="pkg">evolution-ews</emphasis>.</para>

      <indexterm><primary><emphasis role="pkg">evolution-ews</emphasis></primary></indexterm>
    </section>

    <section>
      <title>KMail</title>
      <indexterm><primary>KMail</primary></indexterm>
      <indexterm><primary>email</primary><secondary><emphasis role="pkg">kmail</emphasis></secondary></indexterm>

      <para>The KDE email software can be installed with <command>apt
      install kmail</command>. KMail only handles email, but it belongs
      to a software suite called KDE-PIM (for <emphasis>Personal
      Information Manager</emphasis>) that includes features such as
      address books, a calendar component, and so on. KMail has all the
      features one would expect from an excellent email client.</para>

      <figure>
        <title>The KMail email software</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/kmail.png" scalefit="1" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>
    </section>

    <section>
      <title>Thunderbird</title>
      <indexterm><primary>email</primary><secondary><emphasis role="pkg">thunderbird</emphasis></secondary></indexterm>
      <indexterm><primary>Thunderbird, Mozilla</primary></indexterm>
      <indexterm><primary>Mozilla</primary><secondary>Thunderbird</secondary></indexterm>

      <para>The <emphasis role="pkg">thunderbird</emphasis> package provides
      the email client from the Mozilla software
      suite. Various localization sets are available in
      <emphasis role="pkg">thunderbird-l10n-*</emphasis> packages; the
      <emphasis role="pkg">enigmail</emphasis> extension handles message
      encrypting and signing, but it is not available in all languages.</para>

      <indexterm><primary><emphasis role="pkg">enigmail</emphasis></primary></indexterm>

      <figure>
        <title>The Thunderbird email software</title>
        <mediaobject>
          <imageobject>
            <imagedata fileref="images/thunderbird.png" scalefit="1" width="70%"/>
          </imageobject>
        </mediaobject>
      </figure>
    </section>
  </section>

  <section id="sect.web-browsers">
    <title>Web Browsers</title>
    <indexterm><primary>Web browser</primary></indexterm>
    <indexterm><primary>browser, Web</primary></indexterm>

    <para>Epiphany, the web browser in the GNOME suite, uses the WebKit
    display engine developed by Apple for its Safari browser. The
    relevant package is <emphasis
    role="pkg">epiphany-browser</emphasis>.</para>

    <indexterm><primary>WebKit</primary></indexterm>
    <indexterm><primary>Epiphany</primary></indexterm>
    <indexterm><primary>browser, Web</primary><secondary><emphasis role="pkg">epihpany</emphasis></secondary></indexterm>

    <para>Konqueror, available in the <emphasis role="pkg">konqueror</emphasis>
    package, is KDE's web browser (but can also assume the role of a file
    manager). It uses the KDE-specific KHTML rendering engine; KHTML is an
    excellent engine, as witnessed by the fact that Apple's WebKit is based on
    KHTML. KDE also has a newer browser called Falkon, available in the
    <emphasis role="pkg">falkon</emphasis> package. It uses the QtWebEngine.</para>

    <indexterm><primary>Falkon</primary></indexterm>
    <indexterm><primary>Konqueror</primary></indexterm>
    <indexterm><primary>browser, Web</primary><secondary><emphasis role="pkg">konqueror</emphasis></secondary></indexterm>

    <para>Users not satisfied by any of the above can use Firefox.
    This browser, available in the <emphasis
    role="pkg">firefox-esr</emphasis> package, uses the Mozilla project's
    Gecko renderer, with a thin and extensible interface on top.</para>

    <indexterm><primary>Gecko</primary></indexterm>
    <indexterm><primary>Mozilla</primary><secondary>Firefox</secondary></indexterm>
    <indexterm><primary>Firefox, Mozilla</primary></indexterm>
    <indexterm><primary>browser, Web</primary><secondary><emphasis role="pkg">firefox-esr</emphasis></secondary></indexterm>

    <figure>
      <title>The Firefox web browser</title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/firefox.png" scalefit="1" width="70%"/>
        </imageobject>
      </mediaobject>
    </figure>

    <sidebar>
      <title><emphasis>VOCABULARY</emphasis> Firefox ESR</title>
      <indexterm><primary><emphasis role="pkg">firefox-esr</emphasis></primary></indexterm>
      <indexterm><primary>Firefox (ESR)</primary></indexterm>

      <para>Mozilla has a very fast-paced release cycle for Firefox. New
      releases are published every six to eight weeks and only the latest
      version is supported for security issues. This doesn't suit all kind of
      users so, every 10 cycles, they are promoting one of their release to an
      <emphasis>Extended Support Release</emphasis> (ESR) which will get
      security updates (and no functional changes) during the next 10 cycles
      (which covers a bit more than a year).</para>

      <para>Debian has both versions packaged. The ESR one, in the package
      <emphasis role="pkg">firefox-esr</emphasis>, is used by default since it
      is the only version suitable for Debian <emphasis
      role="distribution">Stable</emphasis> with its long support period (and
      even there Debian has to upgrade from one ESR release to the next
      multiple times during a Debian Stable lifecycle). The regular Firefox is
      available in the <emphasis role="pkg">firefox</emphasis> package but it
      is only available to users of Debian <emphasis
      role="distribution">Unstable</emphasis>.</para>

      <indexterm><primary><emphasis role="pkg">firefox</emphasis></primary></indexterm>
      <indexterm><primary>browser, Web</primary><secondary><emphasis role="pkg">firefox</emphasis></secondary></indexterm>
    </sidebar>

    <sidebar id="sidebar.firefox-iceweasel">
      <title><emphasis>CULTURE</emphasis> Iceweasel, Firefox and others</title>
      <indexterm><primary>Iceweasel</primary></indexterm>
      <indexterm><primary>Icedove</primary></indexterm>

      <para>Before Debian <emphasis role="distribution">Stretch</emphasis>,
      Firefox and Thunderbird were missing. The <emphasis
      role="pkg">iceweasel</emphasis> package contained Iceweasel, which was
      basically Firefox under another name.</para>

      <para>The rationale behind this renaming was a result of the usage
      rules imposed by the Mozilla Foundation on the
      <trademark>Firefox</trademark> registered trademark: any software
      named Firefox had to use the official Firefox logo and icons.
      However, since these elements are not released under a free
      license, Debian could not distribute them in its
      <emphasis>main</emphasis> section. Rather than moving the whole
      browser to <emphasis>non-free</emphasis>, the package maintainer
      choose to use a different name.</para>

      <para>For similar reasons, the <trademark>Thunderbird</trademark>
      email client was renamed to Icedove in a similar fashion.</para>

      <para>Nowadays, the logo and icons are distributed under a free software
      license and Mozilla recognized that the changes made by the Debian
      project are respecting their trademark license so Debian is again able to
      ship Mozilla's applications under their official name.</para>
    </sidebar>

    <sidebar>
      <title><emphasis>CULTURE</emphasis> Mozilla</title>

      <para>Netscape Navigator was the standard browser when the web started
      reaching the masses, but lost ground when Microsoft bundled Internet
      Explorer with Windows and signed contracts with computer manufacturers
      which forbade them from pre-installing Netscape Navigator. Faced with
      this failure, Netscape (the company) decided to “free” its source
      code, by releasing it under a free license, to give it a second
      life. This was the beginning of the Mozilla project. After many
      years of development, the results are more than satisfying: the
      Mozilla project brought forth an HTML rendering engine (called
      Gecko) that is among the most standard-compliant. This rendering
      engine is in particular used by the Mozilla Firefox browser, which
      is one of the major browsers.</para>

      <indexterm><primary>Gecko</primary></indexterm>
      <indexterm><primary>Mozilla</primary></indexterm>
      <indexterm><primary>Netscape</primary></indexterm>
    </sidebar>

    <!-- MAYCHANGE: Debian release name -->
    <para>Last but not least, Debian also contains the
    <emphasis>Chromium</emphasis> web browser (available in
    the <emphasis role="pkg">chromium</emphasis> package). This
    browser is developed by Google and has become the most
    popular browser in just a few years.
    Its clear purpose is to make web services more attractive, both by
    optimizing the browser for performance and by increasing the user's
    security. The free code that powers Chromium is also used by its
    proprietary version called <trademark>Google Chrome</trademark>.</para>

    <indexterm><primary>browser, Web</primary><secondary><emphasis role="pkg">chromium</emphasis></secondary></indexterm>
  </section>

  <section id="sect.development">
    <title>Development</title>
    <section>
      <title>Tools for GTK+ on GNOME</title>

      <para>Anjuta (in the <emphasis role="pkg">anjuta</emphasis>
      package) and GNOME Builder (in the <emphasis
      role="pkg">gnome-builder</emphasis> package) are
      Integrated Development Environments (<acronym>IDE</acronym>)
      optimized for creating GTK+ applications for GNOME.
      Glade (in the <emphasis role="pkg">glade</emphasis> package) is
      an application designed to create GTK+ graphical interfaces for
      GNOME and save them in an XML file. These XML files can then be
      loaded by the GTK+ shared library through its
      <literal>GtkBuilder</literal> component to recreate the saved
      interfaces; such a feature can be interesting, for instance for
      plugins that require dialogs.
      <ulink type="block" url="https://wiki.gnome.org/Apps/Builder"/>
      <ulink type="block" url="http://anjuta.org/"/>
      <ulink type="block" url="https://glade.gnome.org/"/>
      </para>

      <indexterm><primary>Anjuta</primary></indexterm>
      <indexterm><primary>Builder, GNOME Builder</primary></indexterm>
      <indexterm><primary>Glade</primary></indexterm>
    </section>

    <section>
      <title>Tools for Qt</title>

      <para>The equivalent applications for Qt applications are KDevelop by KDE (in the
      <emphasis role="pkg">kdevelop</emphasis> package) for the
      development environment, and Qt Designer (in the <emphasis
      role="pkg">qttools5-dev-tools</emphasis> package) for the design of
      graphical interfaces for Qt applications.</para>

      <para>KDevelop is also a generic IDE and provides plugins for other
      languages like Python and PHP and different build systems.</para>

      <indexterm><primary>KDevelop</primary></indexterm>
      <indexterm><primary>Qt</primary><secondary>Designer</secondary></indexterm>
    </section>
  </section>

  <section id="sect.office-suites">
    <title>Office Suites</title>
    <indexterm><primary>office suite</primary></indexterm>
    <indexterm><primary>suite, office</primary></indexterm>

    <para>Office software has long been seen as lacking in the free software
    world. Users require replacements for Microsoft tools such as Word and
    Excel, but these are so complex that replacements were hard to develop. The
    situation changed when Sun released the StarOffice code under a free
    license as OpenOffice, a project which later gave birth to LibreOffice,
    which is available on Debian.  The KDE project also has its own office
    suite, called Calligra Suite (previously KOffice), and GNOME, while never
    offering a comprehensive office suite, provides AbiWord as a word processor
    and Gnumeric as a spreadsheet. The various projects each have their
    strengths. For instance, the Gnumeric spreadsheet is better than
    OpenOffice.org/LibreOffice in some domains, notably the precision of its
    calculations. On the word processing front, the LibreOffice suite still
    leads the way.</para>

    <indexterm><primary>OpenOffice.org</primary></indexterm>
    <indexterm><primary>StarOffice</primary></indexterm>
    <indexterm><primary>LibreOffice</primary></indexterm>
    <indexterm><primary>GNOME Office</primary></indexterm>
    <indexterm><primary>Calligra Suite</primary></indexterm>
    <indexterm><primary>Gnumeric</primary></indexterm>

    <para>Another important feature for users is the ability to
    import Microsoft Office documents. Even though all
    office suites have this feature, only the ones in
    OpenOffice.org and LibreOffice are functional enough for daily
    use.</para>

    <sidebar>
      <title><emphasis>THE BROADER VIEW</emphasis> LibreOffice replaces OpenOffice.org</title>

      <para>OpenOffice.org contributors set up a foundation
      (<emphasis>The Document Foundation</emphasis>) to foster the project's
      development. The idea had been discussed for some time, but the
      actual trigger was Oracle's acquisition of Sun. The new ownership
      made the future of OpenOffice under Oracle uncertain. Since Oracle
      declined to join the foundation, the developers had to give up on
      the OpenOffice.org name. This office suite is now known as
      <emphasis>LibreOffice</emphasis>, and is available in Debian.</para>

      <para>After a period of relative stagnation on OpenOffice.org, Oracle
      donated the code and associated rights to the Apache Software Foundation,
      and OpenOffice is now an Apache project. This project is not currently
      available in Debian and is rather moribund when compared to LibreOffice.</para>

    </sidebar>

    <indexterm><primary>Word, Microsoft</primary></indexterm>
    <indexterm><primary>Excel, Microsoft</primary></indexterm>
    <indexterm><primary>Microsoft</primary><secondary>Word</secondary></indexterm>
    <indexterm><primary>Microsoft</primary><secondary>Excel</secondary></indexterm>

    <para>LibreOffice and Calligra Suite are available in the <emphasis
    role="pkg">libreoffice</emphasis> and <emphasis
    role="pkg">calligra</emphasis> Debian packages, respectively.</para>

    <para>Language-specific packs for LibreOffice are
    distributed in separate packages, most notably <emphasis
    role="pkg">libreoffice-l10n-*</emphasis> and <emphasis
    role="pkg">libreoffice-help-*</emphasis>. Some
    features such as spelling dictionaries, hyphenation patterns and
    thesauri are in separate packages, such as <emphasis
    role="pkg">myspell-*</emphasis>, <emphasis
    role="pkg">hunspell-*</emphasis>, <emphasis
    role="pkg">hyphen-*</emphasis> and <emphasis
    role="pkg">mythes-*</emphasis>.</para>

    <indexterm><primary>office suite</primary><secondary><emphasis role="pkg">libreoffice</emphasis></secondary></indexterm>
    <indexterm><primary>office suite</primary><secondary><emphasis role="pkg">calligra</emphasis></secondary></indexterm>
  </section>

  <section id="sect.windows-emulation">
    <title>Emulating Windows: Wine</title>
    <indexterm><primary>Emulating Windows</primary></indexterm>
    <indexterm><primary>Windows, emulation</primary></indexterm>

    <para>In spite of all the previously mentioned efforts, there are still
    a number of tools without a Linux equivalent, or for which the original
    version is absolutely required. This is where Windows emulation systems
    come in handy. The most well-known among them is Wine.
    <ulink type="block" url="https://www.winehq.org/"/></para>

    <sidebar>
      <title><emphasis>COMPLEMENTS</emphasis> CrossOver Linux</title>

      <para><emphasis>CrossOver</emphasis>, produced by CodeWeavers, is a
      set of enhancements to Wine that broadens the available set of
      emulated features to a point at which Microsoft Office becomes fully
      usable. Some of the enhancements are periodically merged into Wine.
      <ulink type="block" url="https://www.codeweavers.com/products/"/>
      </para>

      <indexterm><primary><emphasis>CrossOver</emphasis></primary></indexterm>
      <indexterm><primary>CodeWeavers</primary></indexterm>
    </sidebar>

    <para>However, one should keep in mind that it is only a solution among
    others, and the problem can also be tackled with a virtual machine or
    VNC; both of these solutions are detailed in the sidebars
    <xref linkend="sidebar.virtual-machines"/> and
    <xref linkend="sidebar.wts-or-vnc"/>.</para>

    <para>Let us start with a reminder: emulation allows executing a
    program (developed for a target system) on a different host system. The
    emulation software uses the host system, where the application runs, to
    imitate the required features of the target system.</para>

    <indexterm><primary>Wine</primary></indexterm>

    <para>Now let's install the required packages (<emphasis
    role="pkg">ttf-mscorefonts-installer</emphasis> is in the contrib
    section):</para>

    <screen>
<computeroutput># </computeroutput><userinput>apt install wine ttf-mscorefonts-installer</userinput>
</screen>
    <indexterm><primary><command>winecfg</command></primary></indexterm>

    <para>On a 64 bit (amd64) system, if your Windows applications
    are 32 bit applications, then you will have to enable multi-arch
    to be able to install wine32 from the i386 architecture (see <xref
    linkend="sect.multi-arch" />).</para>

    <para>The user then needs to run <command>winecfg</command> and
    configure which (Debian) locations are mapped to which (Windows)
    drives. <command>winecfg</command> has some sane defaults and can
    autodetect some more drives; note that even if you have a
    dual-boot system, you should not point the <literal>C:</literal>
    drive at where the Windows partition is mounted in Debian, as Wine is
    likely to overwrite some of the data on that partition, making
    Windows unusable.  Other settings can be kept to their default
    values.  To run Windows programs, you will first need to install
    them by running their (Windows) installer under Wine, with a
    command such as <command>wine
    <replaceable>.../setup.exe</replaceable></command>; once the
    program is installed, you can run it with <command>wine
    <replaceable>.../program.exe</replaceable></command>.  The exact
    location of the <filename>program.exe</filename> file depends on
    where the <literal>C:</literal> drive is mapped; in many cases,
    however, simply running <command>wine
    <replaceable>program</replaceable></command> will work, since the
    program is usually installed in a location where Wine will look
    for it by itself.</para>

    <sidebar>
      <title><emphasis>TIP</emphasis> Working around a winecfg failure</title>
      <indexterm><primary><command>winecfg</command></primary></indexterm>
      <indexterm><primary><command>wine64</command></primary></indexterm>
      <indexterm><primary><command>wine32</command></primary></indexterm>

      <para>In some cases, <command>winecfg</command> (which is just a wrapper)
      might fail. As a work-around, it is possible to try to run the underlying
      command manually: <command>wine64
      /usr/lib/x86_64-linux-gnu/wine/wine/winecfg.exe.so</command> or
      <command>wine32
      /usr/lib/i386-linux-gnu/wine/wine/winecfg.exe.so</command>.</para>

    </sidebar>

    <para>Note that you should not rely on Wine (or similar solutions)
    without actually testing the particular software: only a real-use test
    will determine conclusively whether emulation is fully
    functional.</para>

    <sidebar id="sidebar.virtual-machines">
      <title><emphasis>ALTERNATIVE</emphasis> Virtual machines</title>

      <para>An alternative to emulating Microsoft's operating system is to
      actually run it in a virtual machine that emulates a full hardware
      machine. This allows running any operating system. <xref
      linkend="advanced-administration"/> describes several virtualization
      systems, most notably Xen and KVM (but also QEMU, VMWare and
      VirtualBox).</para>
    </sidebar>

    <sidebar id="sidebar.wts-or-vnc">
      <title><emphasis>ALTERNATIVE</emphasis> <foreignphrase>Windows Terminal Server</foreignphrase> or VNC</title>

      <para>Yet another possibility is to remotely run the legacy Windows
      applications on a central server with <emphasis>Windows Terminal
      Server</emphasis> and access the application from Linux machines
      using <emphasis>rdesktop</emphasis>. This is a Linux client for the
      RDP protocol (<emphasis>Remote Desktop Protocol</emphasis>) that
      <foreignphrase>Windows NT/2000 Terminal Server</foreignphrase> uses
      to display desktops on remote machines.</para>

      <indexterm><primary>RDP</primary></indexterm>
      <indexterm><primary>Remote Desktop Protocol</primary><see>RDP</see></indexterm>
      <indexterm><primary>Windows</primary><secondary>Terminal Server</secondary></indexterm>

      <para>The VNC software provides similar features, with the added
      benefit of also working with many operating systems. Linux VNC
      clients and servers are described in <xref
      linkend="sect.remote-login"/>.</para>
    </sidebar>
  </section>

  <section id="sect.rtc-clients">
    <title>Real-Time Communications software</title>
    <indexterm><primary>Real-Time Communication</primary><see>RTC</see></indexterm>
    <indexterm><primary>RTC</primary></indexterm>

    <para>Debian provides a wide range of Real-Time Communications
    (<acronym>RTC</acronym>) client software. The setup of RTC servers is
    discussed in <xref linkend="sect.rtc-services"/>. In <acronym>SIP</acronym>
    (Session Initiation Protocol) terminology, a client application or device
    is also referred to as a user agent.</para>

    <indexterm><primary>User agent (SIP)</primary></indexterm>
    <indexterm><primary>SIP</primary><secondary>user agent</secondary></indexterm>

    <para>Each client application varies in functionality. Some
    applications are more convenient for intensive chat users while
    other applications are more stable for webcam users. It may be
    necessary to test several applications to identify those which
    are most satisfactory. A user may finally decide that they
    need more than one application, for example, an XMPP application
    for messaging with customers and an IRC application for collaboration
    with some online communities.</para>

    <para>To maximize the ability of users to communicate with the wider
    world, it is recommended to configure both SIP and XMPP clients
    or a single client that supports both protocols.</para>

    <indexterm><primary>SIP</primary></indexterm>
    <indexterm><primary>XMPP</primary></indexterm>
    <indexterm><primary>IM</primary></indexterm>

    <para>The default GNOME desktop suggests the Empathy communications
    client. Empathy can support both SIP and XMPP. It supports instant
    messaging (IM), voice and video. The KDE project provides KDE Telepathy,
    a communications client based on the same underlying Telepathy APIs
    used by the GNOME Empathy client.</para>

    <indexterm><primary>Empathy</primary></indexterm>
    <indexterm><primary>Telepathy</primary></indexterm>

    <para>Popular alternatives to Empathy/Telepathy include Ekiga,
    Linphone, Psi, Jitsi and Jami (formerly known as Ring).</para>

    <indexterm><primary>Ekiga</primary></indexterm>
    <indexterm><primary>Linphone</primary></indexterm>
    <indexterm><primary>Psi</primary></indexterm>
    <indexterm><primary>Jami (soft-phone)</primary></indexterm>
    <indexterm><primary>Jitsi</primary></indexterm>
    <indexterm><primary>SFLphone</primary></indexterm>

    <para>Jitsi requires no client other than a web browser. It
    support encrypted calls, and there is a huge list of public
    instances. There is no official Debian package for Jitsi, but
    it can be downloaded from their official website.</para>
    <para>Some of these applications can also interact with mobile users
    using apps such as Lumicall on Android.
    <ulink type="block" url="https://lumicall.org"/>
    </para>

    <indexterm><primary>Lumicall</primary></indexterm>

    <para>The <emphasis>Real-Time Communications Quick Start
    Guide</emphasis> has a chapter dedicated to client software.
    <ulink type="block" url="http://rtcquickstart.org/guide/multi/useragents.html"/>
    </para>

    <sidebar>
      <title><emphasis>TIP</emphasis> Look for clients supporting ICE and TURN</title>
      <indexterm><primary><foreignphrase>Traversal Using Relays around NAT</foreignphrase></primary><see>TURN</see></indexterm>
      <indexterm><primary><foreignphrase>Interactive Connectivity Establishment</foreignphrase></primary><see>ICE</see></indexterm>
      <indexterm><primary>TURN</primary></indexterm>
      <indexterm><primary>ICE</primary></indexterm>

      <para>Some RTC clients have significant problems sending voice and
      video through firewalls and NAT networks. Users may receive
      ghost calls (their phone rings but they don't hear the other person)
      or they may not be able to call at all.</para>

      <para>The ICE and TURN protocols were developed to resolve these issues.
      Operating a TURN server with public IP addresses in each site and
      using client software that supports both ICE and TURN gives the
      best user experience.</para>

      <para>If the client software is only intended for instant messaging,
      there is no requirement for ICE or TURN support.</para>
    </sidebar>

    <sidebar>
     <title><emphasis>ALTERNATIVE</emphasis> Internet Relay Chat</title>

     <para>IRC can also be considered, in addition to SIP and XMPP. IRC
     is more oriented around the concept of channels, the name of
     which starts with a hash sign <literal>#</literal>. Each channel
     is usually targeted at a specific topic and any number of people
     can join a channel to discuss it (but users can still have
     one-to-one private conversations if needed). The IRC protocol is
     older, and does not allow end-to-end encryption of the messages;
     it is still possible to encrypt the communications between the
     users and the server by tunneling the IRC protocol inside
     SSL.</para>

     <indexterm><primary>IRC</primary></indexterm>
     <indexterm><primary><foreignphrase>Internet Relay Chat</foreignphrase></primary><see>IRC</see></indexterm>

     <para>IRC clients are a bit more complex, and they usually
     provide many features that are of limited use in a corporate
     environment. For instance, channel “operators” are users
     endowed with the ability to kick other users from a channel, or
     even ban them permanently, when the normal discussion is
     disrupted.</para>

     <para>Since the IRC protocol is very old, many clients are available to
     cater for many user groups; examples include XChat, and Smuxi (graphical
     clients based on GTK+), Irssi (text mode), Circe (integrated to Emacs),
     and so on.</para>
    </sidebar>

  </section>
</chapter>
<!-- vim: set spell spl=en_us ft=xml tw=79 ts=2 sw=2 ai si et: -->
