msgid ""
msgstr "Project-Id-Version: 0\nPOT-Creation-Date: 2020-08-28 10:15+0200\nPO-Revision-Date: 2021-03-12 11:03+0000\nLast-Translator: d <dmanye@gmail.com>\nLanguage-Team: Catalan <https://hosted.weblate.org/projects/debian-handbook/10_network-infrastructure/ca/>\nLanguage: ca-ES\nMIME-Version: 1.0\nContent-Type: application/x-publican; charset=UTF-8\nContent-Transfer-Encoding: 8bit\nPlural-Forms: nplurals=2; plural=n != 1;\nX-Generator: Weblate 4.5.2-dev\n"

msgid "Network"
msgstr "Xarxa"

msgid "Gateway"
msgstr "Gateway"

msgid "TCP/IP"
msgstr ""

msgid "IPv6"
msgstr ""

msgid "DNS"
msgstr ""

msgid "Bind"
msgstr ""

msgid "DHCP"
msgstr ""

msgid "QoS"
msgstr ""

msgid "Network Infrastructure"
msgstr ""

msgid "Linux sports the whole Unix heritage for networking, and Debian provides a full set of tools to create and manage them. This chapter reviews these tools."
msgstr ""

msgid "A gateway is a system linking several networks. This term often refers to a local network's “exit point” on the mandatory path to all external IP addresses. The gateway is connected to each of the networks it links together, and acts as a router to convey IP packets between its various interfaces."
msgstr ""

msgid "<primary>gateway</primary>"
msgstr ""

msgid "<primary>network</primary><secondary>gateway</secondary>"
msgstr ""

msgid "<primary>router</primary>"
msgstr "<primary>router</primary>"

msgid "<emphasis>BACK TO BASICS</emphasis> IP packet"
msgstr ""

msgid "<primary>packet</primary><secondary>IP</secondary>"
msgstr ""

msgid "Most networks nowadays use the IP protocol (<emphasis>Internet Protocol</emphasis>). This protocol segments the transmitted data into limited-size packets. Each packet contains, in addition to its payload data, a number of details required for its proper routing."
msgstr ""

msgid "<emphasis>BACK TO BASICS</emphasis> TCP/UDP"
msgstr ""

msgid "<primary>port</primary><secondary>TCP</secondary>"
msgstr ""

msgid "<primary>port</primary><secondary>UDP</secondary>"
msgstr ""

msgid "<primary>TCP, port</primary>"
msgstr ""

msgid "<primary>UDP, port</primary>"
msgstr ""

msgid "Many programs do not handle the individual packets themselves, even though the data they transmit does travel over IP; they often use TCP (<emphasis>Transmission Control Protocol</emphasis>). TCP is a layer over IP allowing the establishment of connections dedicated to data streams between two points. The programs then only see an entry point into which data can be fed with the guarantee that the same data exits without loss (and in the same sequence) at the exit point at the other end of the connection. Although many kinds of errors can happen in the lower layers, they are compensated by TCP: lost packets are retransmitted, and packets arriving out of order (for example, if they used different paths) are re-ordered appropriately."
msgstr ""

msgid "Another protocol relying on IP is UDP (<emphasis>User Datagram Protocol</emphasis>). In contrast to TCP, it is packet-oriented. Its goals are different: the purpose of UDP is only to transmit one packet from an application to another. The protocol does not try to compensate for possible packet loss on the way, nor does it ensure that packets are received in the same order as were sent. The main advantage to this protocol is that the latency is greatly improved, since the loss of a single packet does not delay the receiving of all following packets until the lost one is retransmitted."
msgstr ""

msgid "TCP and UDP both involve ports, which are “extension numbers” for establishing communication with a given application on a machine. This concept allows keeping several different communications in parallel with the same correspondent, since these communications can be distinguished by the port number."
msgstr ""

msgid "Some of these port numbers — standardized by the IANA (<emphasis>Internet Assigned Numbers Authority</emphasis>) — are “well-known” for being associated with network services. For instance, TCP port 25 is generally used by the email server. <ulink type=\"block\" url=\"https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml\" />"
msgstr ""

msgid "When a local network uses a private address range (not routable on the Internet), the gateway needs to implement <emphasis>address masquerading</emphasis> so that the machines on the network can communicate with the outside world. The masquerading operation is a kind of proxy operating on the network level: each outgoing connection from an internal machine is replaced with a connection from the gateway itself (since the gateway does have an external, routable address), the data going through the masqueraded connection is sent to the new one, and the data coming back in reply is sent through to the masqueraded connection to the internal machine. The gateway uses a range of dedicated TCP ports for this purpose, usually with very high numbers (over 60000). Each connection coming from an internal machine then appears to the outside world as a connection coming from one of these reserved ports."
msgstr ""

msgid "<primary>masquerading</primary>"
msgstr ""

msgid "<emphasis>CULTURE</emphasis> Private address range"
msgstr ""

msgid "<primary>IP address</primary><secondary>private</secondary>"
msgstr ""

msgid "<primary>private IP address</primary>"
msgstr ""

msgid "RFC 1918 defines three ranges of IPv4 addresses not meant to be routed on the Internet but only used in local networks. The first one, <literal>10.0.0.0/8</literal> (see sidebar <xref linkend=\"sidebar.networking-basics\" />), is a class-A range (with 2<superscript>24</superscript> IP addresses). The second one, <literal>172.16.0.0/12</literal>, gathers 16 class-B ranges (<literal>172.16.0.0/16</literal> to <literal>172.31.0.0/16</literal>), each containing 2<superscript>16</superscript> IP addresses. Finally, <literal>192.168.0.0/16</literal> is a class-B range (grouping 256 class-C ranges, <literal>192.168.0.0/24</literal> to <literal>192.168.255.0/24</literal>, with 256 IP addresses each). <ulink type=\"block\" url=\"http://www.faqs.org/rfcs/rfc1918.html\" />"
msgstr ""

msgid "The gateway can also perform two kinds of <emphasis>network address translation</emphasis> (or NAT for short). The first kind, <emphasis>Destination NAT</emphasis> (DNAT) is a technique to alter the destination IP address (and/or the TCP or UDP port) for a (generally) incoming connection. The connection tracking mechanism also alters the following packets in the same connection to ensure continuity in the communication. The second kind of NAT is <emphasis>Source NAT</emphasis> (SNAT), of which <emphasis>masquerading</emphasis> is a particular case; SNAT alters the source IP address (and/or the TCP or UDP port) of a (generally) outgoing connection. As for DNAT, all the packets in the connection are appropriately handled by the connection tracking mechanism. Note that NAT is only relevant for IPv4 and its limited address space; in IPv6, the wide availability of addresses greatly reduces the usefulness of NAT by allowing all “internal” addresses to be directly routable on the Internet (this does not imply that internal machines are accessible, since intermediary firewalls can filter traffic)."
msgstr ""

msgid "<primary>NAT</primary>"
msgstr ""

msgid "<primary>Network</primary><secondary>Address Translation</secondary>"
msgstr ""

msgid "<primary>SNAT</primary>"
msgstr ""

msgid "<primary>DNAT</primary>"
msgstr ""

msgid "<primary>Destination NAT</primary>"
msgstr ""

msgid "<primary>Source NAT</primary>"
msgstr ""

msgid "<emphasis>BACK TO BASICS</emphasis> Port forwarding"
msgstr ""

msgid "<primary>port forwarding</primary>"
msgstr ""

msgid "A concrete application of DNAT is <emphasis>port forwarding</emphasis>. Incoming connections to a given port of a machine are forwarded to a port on another machine. Other solutions may exist for achieving a similar effect, though, especially at the application level with <command>ssh</command> (see <xref linkend=\"sect.ssh-port-forwarding\" />) or <command>redir</command>."
msgstr ""

msgid "Enough theory, let's get practical. Turning a Debian system into a gateway is a simple matter of enabling the appropriate option in the Linux kernel, by way of the <filename>/proc/</filename> virtual filesystem:"
msgstr ""

msgid ""
"\n"
"<computeroutput># </computeroutput><userinput>echo 1 &gt; /proc/sys/net/ipv4/conf/default/forwarding</userinput>"
msgstr ""

msgid "This option can also be automatically enabled on boot if <filename>/etc/sysctl.conf</filename> sets the <literal>net.ipv4.conf.default.forwarding</literal> option to <literal>1</literal>."
msgstr ""

msgid "The <filename>/etc/sysctl.conf</filename> file"
msgstr ""

msgid ""
"\n"
"net.ipv4.conf.default.forwarding = 1\n"
"net.ipv4.conf.default.rp_filter = 1\n"
"net.ipv4.tcp_syncookies = 1"
msgstr ""

msgid "The same effect can be obtained for IPv6 by simply replacing <literal>ipv4</literal> with <literal>ipv6</literal> in the manual command and using the <literal>net.ipv6.conf.all.forwarding</literal> line in <filename>/etc/sysctl.conf</filename>."
msgstr ""

msgid "Enabling IPv4 masquerading is a slightly more complex operation that involves configuring the <emphasis>netfilter</emphasis> firewall."
msgstr ""

msgid "Similarly, using NAT (for IPv4) requires configuring <emphasis>netfilter</emphasis>. Since the primary purpose of this component is packet filtering, the details are listed in <xref linkend=\"security\" xrefstyle=\"select: label quotedtitle nopage\" /> (see <xref linkend=\"sect.firewall-packet-filtering\" />)."
msgstr ""

msgid "X.509 certificates"
msgstr ""

msgid "<primary>certificates</primary>"
msgstr ""

msgid "<primary>SSL</primary>"
msgstr ""

msgid "<primary>TLS</primary>"
msgstr ""

msgid "<primary>X.509</primary><secondary>certificates</secondary>"
msgstr ""

msgid "<primary>CA</primary><see>Certificate Authority</see>"
msgstr ""

msgid "<primary>Certificate Authority</primary>"
msgstr ""

msgid "Certificates are an important building block of many network services built on cryptographic protocols, when they need some sort of central authentication."
msgstr ""

msgid "Among those protocols, SSL (<emphasis>Secure Socket Layer</emphasis>) was invented by Netscape to secure connections to web servers. It was later standardized by IETF under the acronym TLS (<emphasis>Transport Layer Security</emphasis>). Since then TLS continued to evolve, and nowadays SSL is deprecated due to multiple design flaws that have been discovered."
msgstr ""

msgid "The TLS protocol aims primarily to provide privacy and data integrity between two or more communicating computer applications. The most common case on the Internet is the communication between a client (e.g. a web browser) and a server."
msgstr ""

msgid "A key par is needed for the exchange of information, which involves a public key that includes information about the identity of the owner and matches a private key. The private key must be kept secret, otherwise the security is compromised. However, anyone can create a key pair, store any identity on it, and pretend to be the identity of their choice. One solution involves the concept of a <emphasis>Certification Authority</emphasis> (CA), formalized by the X.509 standard. This term covers an entity that holds a trusted key pair known as a <emphasis>root certificate</emphasis>. This certificate is only used to sign other certificates (key pairs), after proper steps have been undertaken to check the identity stored on the key pair. Applications using X.509 can then check the certificates presented to them, if they know about the trusted root certificates."
msgstr ""

msgid "You can implement a CA (as described in <xref linkend=\"sect.easy-rsa\" />), but if you intend to use the certificate for a website, you need to rely on a trusted CA. The prices vary significantly, but it is possible to implement great security spending little to no money."
msgstr ""

msgid "Creating gratis trusted certificates"
msgstr ""

msgid "Many programs create and use snakeoil certificates by default (see sidebar <xref linkend=\"sidebar.snakeoil-certs\" />). Fortunately the <emphasis role=\"pkg\">certbot</emphasis> package brings everything we need to create our own trusted certificates, provided by the \"Lets Encrypt\" initiative (see sidebar <xref linkend=\"sidebar.letsencrypt\" />), which can also be used for mail transport agents (Postfix) and mail delivery agents (Dovecot, Cyrus, etc.)."
msgstr ""

msgid "The Falcot administrators just want to create a certificate for their website, which runs on Apache. There is a convenient Apache plugin for <emphasis role=\"pkg\">certbot</emphasis> that automatically edits the Apache configuration to serve the obtained certificate, so they make use of it:"
msgstr ""

msgid "<primary><emphasis role=\"pkg\">certbot</emphasis></primary>"
msgstr ""

msgid "<primary><emphasis role=\"pkg\">python-certbot-apache</emphasis></primary>"
msgstr ""

msgid "<primary>Apache</primary><secondary><emphasis role=\"pkg\">certbot</emphasis></secondary>"
msgstr ""

msgid "<primary>Apache</primary><secondary>trusted certificates</secondary>"
msgstr ""

msgid ""
"\n"
"<computeroutput># </computeroutput><userinput>apt install python-certbot-apache\n"
"</userinput><computeroutput>[...]\n"
"# </computeroutput><userinput>certbot --apache\n"
"</userinput><computeroutput>Saving debug log to /var/log/letsencrypt/letsencrypt.log\n"
"Plugins selected: Authenticator apache, Installer apache\n"
"Enter email address (used for urgent renewal and security notices) (Enter 'c' to\n"
"cancel): </computeroutput><userinput>admin@falcot.com\n"
"</userinput><computeroutput>\n"
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n"
"Please read the Terms of Service at\n"
"https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf. You must\n"
"agree in order to register with the ACME server at\n"
"https://acme-v02.api.letsencrypt.org/directory\n"
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n"
"(A)gree/(C)ancel: </computeroutput><userinput>A\n"
"</userinput><computeroutput>\n"
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n"
"Would you be willing to share your email address with the Electronic Frontier\n"
"Foundation, a founding partner of the Let's Encrypt project and the non-profit\n"
"organization that develops Certbot? We'd like to send you email about our work\n"
"encrypting the web, EFF news, campaigns, and ways to support digital freedom.\n"
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n"
"(Y)es/(N)o: </computeroutput><userinput> N\n"
"</userinput><computeroutput>\n"
"No names were found in your configuration files. Please enter in your domain\n"
"name(s) (comma and/or space separated)  (Enter 'c' to cancel): </computeroutput><userinput>falcot.com\n"
"</userinput>\n"
"<computeroutput>Obtaining a new certificate\n"
"Performing the following challenges:\n"
"http-01 challenge for falcot.com\n"
"Enabled Apache rewrite module\n"
"Waiting for verification...\n"
"Cleaning up challenges\n"
"Created an SSL vhost at /etc/apache2/sites-available/000-default-le-ssl.conf\n"
"Enabled Apache socache_shmcb module\n"
"Enabled Apache ssl module\n"
"Deploying Certificate to VirtualHost /etc/apache2/sites-available/000-default-le-ssl.conf\n"
"Enabling available site: /etc/apache2/sites-available/000-default-le-ssl.conf\n"
"\n"
"Please choose whether or not to redirect HTTP traffic to HTTPS, removing HTTP access.\n"
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n"
"1: No redirect - Make no further changes to the webserver configuration.\n"
"2: Redirect - Make all requests redirect to secure HTTPS access. Choose this for\n"
"new sites, or if you're confident your site works on HTTPS. You can undo this\n"
"change by editing your web server's configuration.\n"
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n"
"Select the appropriate number [1-2] then [enter] (press 'c' to cancel):</computeroutput> <userinput>2\n"
"</userinput><computeroutput>\n"
"Enabled Apache rewrite module\n"
"Redirecting vhost in /etc/apache2/sites-enabled/000-default.conf to ssl vhost in /etc/apache2/sites-available/000-default-le-ssl.conf\n"
"\n"
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n"
"Congratulations! You have successfully enabled https://falcot.com\n"
"\n"
"You should test your configuration at:\n"
"https://www.ssllabs.com/ssltest/analyze.html?d=falcot.com\n"
"- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -\n"
"\n"
"IMPORTANT NOTES:\n"
" - Congratulations! Your certificate and chain have been saved at:\n"
"   /etc/letsencrypt/live/falcot.com/fullchain.pem\n"
"   Your key file has been saved at:\n"
"   /etc/letsencrypt/live/falcot.com/privkey.pem\n"
"   Your cert will expire on 2020-06-04. To obtain a new or tweaked\n"
"   version of this certificate in the future, simply run certbot again\n"
"   with the \"certonly\" option. To non-interactively renew *all* of\n"
"   your certificates, run \"certbot renew\"\n"
" - Your account credentials have been saved in your Certbot\n"
"   configuration directory at /etc/letsencrypt. You should make a\n"
"   secure backup of this folder now. This configuration directory will\n"
"   also contain certificates and private keys obtained by Certbot so\n"
"   making regular backups of this folder is ideal.\n"
" - If you like Certbot, please consider supporting our work by:\n"
"\n"
"   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate\n"
"   Donating to EFF:                    https://eff.org/donate-le\n"
"</computeroutput>"
msgstr ""

msgid "<emphasis>CULTURE</emphasis> The Let's Encrypt Initiative"
msgstr ""

msgid "The <ulink url=\"https://letsencrypt.org/\">Let's Encrypt</ulink> initiative is a joint effort to create a free, automated, and open certificate authority (CA), run for the public's benefit. It is supported by the <acronym>EFF</acronym> and the Linux Foundation. The initiative provides an automated tool for acquiring and renewing certificates. This reduces the amount of manual effort involved, especially if multiple sites and domains must be managed. The certificates can also be used for SIP, XMPP, WebSockets and TURN servers. Usage of the service requires control over the DNS information of the domain in question (domain validation). <ulink type=\"block\" url=\"https://letsencrypt.org/how-it-works/\" />"
msgstr ""

msgid "<primary>Let's Encrypt</primary>"
msgstr ""

msgid "If you would rather keep the server running during the certificate creation, you can use the webroot plugin to get the certificate with the arguments <command>certonly</command> and <command>--webroot</command>. You would have to specify a <command>--webroot-path</command> (abbreviated <command>-w</command>), which should contain the files served. The command looks as follows:"
msgstr ""

msgid "<computeroutput># </computeroutput><userinput>certbot certonly --webroot -w <replaceable>/var/www/html</replaceable> -d www.<replaceable>DOMAIN</replaceable>.com -d <replaceable>DOMAIN</replaceable>.com</userinput>"
msgstr ""

msgid "You need to restart all services using the certificates that you have created."
msgstr ""

msgid "The certificates created are so called short-life certificates, which are valid for 90 days and must therefor be renewed every once in three months using the <command>certbot renew</command> command. However, we shouldn't renew every certificate manually, but automatically. A basic cron job is included by <emphasis role=\"pkg\">certbot</emphasis> in <filename>/etc/cron.d/certbot</filename>. To ensure that certificates can be automatically renewed, you can execute <command>certbot renew --dry-run</command>."
msgstr ""

msgid "Public Key Infrastructure: <emphasis>easy-rsa</emphasis>"
msgstr ""

msgid "<primary>PKI (Public Key Infrastructure)</primary>"
msgstr ""

msgid "<primary>Public Key Infrastructure</primary>"
msgstr ""

msgid "<primary>X.509, certificate</primary>"
msgstr ""

msgid "<primary>certificate</primary><secondary>X.509</secondary>"
msgstr ""

msgid "<primary><emphasis>easy-rsa</emphasis></primary>"
msgstr ""

msgid "<primary>RSA (algorithm)</primary>"
msgstr ""

msgid "<primary>key pair</primary>"
msgstr ""

msgid "It is also possible to create our own CA, for that we will use the RSA algorithm, widely used in public-key cryptography. It involves a “key pair”, comprised of a private and a public key. The two keys are closely linked to each other, and their mathematical properties are such that a message encrypted with the public key can only be decrypted by someone knowing the private key, which ensures confidentiality. In the opposite direction, a message encrypted with the private key can be decrypted by anyone knowing the public key, which allows authenticating the origin of a message since only someone with access to the private key could generate it. When associated with a digital hash function (MD5, SHA1, or a more recent variant), this leads to a signature mechanism that can be applied to any message."
msgstr ""

msgid "Since public CAs only emit certificates in exchange for a (hefty) fee, it is also possible to create a private certification authority within the company. The <emphasis role=\"pkg\">easy-rsa</emphasis> package provides tools to serve as an X.509 certification infrastructure, implemented as a set of scripts using the <command>openssl</command> command."
msgstr ""

msgid "<emphasis>ALTERNATIVE</emphasis> GnuTLS"
msgstr ""

msgid "<primary>DTLS</primary>"
msgstr ""

msgid "<primary>GnuTLS</primary>"
msgstr ""

msgid "GnuTLS can also be used to generate a CA, and deal with other technologies around the TLS, DTLS and SSL protocols."
msgstr ""

msgid "The package <emphasis role=\"pkg\">gnutls-bin</emphasis> contains the command-line utilities. It is also useful to install the <emphasis role=\"pkg\">gnutls-doc</emphasis> package, which includes extensive documentation."
msgstr ""

msgid "The Falcot Corp administrators use this tool to create the required certificates, both for the server and the clients. This allows the configuration of all clients to be similar since they will only have to be set up so as to trust certificates coming from Falcot's local CA. This CA is the first certificate to create; to this end, the administrators set up a directory with the files required for the CA in an appropriate location, preferably on a machine not connected to the network in order to mitigate the risk of the CA's private key being stolen."
msgstr ""

msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>make-cadir pki-falcot\n"
"</userinput><computeroutput>$ </computeroutput><userinput>cd pki-falcot</userinput>"
msgstr ""

msgid "They then store the required parameters into the <filename>vars</filename> file, which can be uncommented and edited:"
msgstr ""

msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>vim vars\n"
"</userinput><computeroutput>$ </computeroutput><userinput>grep EASYRSA vars\n"
"</userinput><computeroutput>if [ -z \"$EASYRSA_CALLER\" ]; then\n"
"# easyrsa.  More specific variables for specific files (e.g., EASYRSA_SSL_CONF)\n"
"#set_var EASYRSA\t\"${0%/*}\"\n"
"#set_var EASYRSA_OPENSSL\t\"openssl\"\n"
"#set_var EASYRSA_OPENSSL\t\"C:/Program Files/OpenSSL-Win32/bin/openssl.exe\"\n"
"#set_var EASYRSA_PKI\t\t\"$PWD/pki\"\n"
"#set_var EASYRSA_DN\t\"cn_only\"\n"
"#set_var EASYRSA_REQ_COUNTRY\t\"FR\"\n"
"#set_var EASYRSA_REQ_PROVINCE\t\"Loire\"\n"
"#set_var EASYRSA_REQ_CITY\t\"Saint-Étienne\"\n"
"#set_var EASYRSA_REQ_ORG\t\"Falcot Corp\"\n"
"#set_var EASYRSA_REQ_EMAIL\t\"admin@falcot.com\"\n"
"#set_var EASYRSA_REQ_OU\t\t\"Certificate authority\"\n"
"#set_var EASYRSA_KEY_SIZE\t2048\n"
"#set_var EASYRSA_ALGO\t\trsa\n"
"#set_var EASYRSA_CURVE\t\tsecp384r1\n"
"#set_var EASYRSA_CA_EXPIRE\t3650\n"
"#set_var EASYRSA_CERT_EXPIRE\t1080\n"
"#set_var EASYRSA_CERT_RENEW\t30\n"
"#set_var EASYRSA_CRL_DAYS\t180\n"
"#set_var EASYRSA_NS_SUPPORT\t\"no\"\n"
"#set_var EASYRSA_NS_COMMENT\t\"Easy-RSA Generated Certificate\"\n"
"#set_var EASYRSA_TEMP_FILE\t\"$EASYRSA_PKI/extensions.temp\"\n"
"# when undefined here, default behaviour is to look in $EASYRSA_PKI first, then\n"
"# fallback to $EASYRSA for the 'x509-types' dir.  You may override this\n"
"#set_var EASYRSA_EXT_DIR\t\"$EASYRSA/x509-types\"\n"
"# EASYRSA_PKI or EASYRSA dir (in that order.) NOTE that this file is Easy-RSA\n"
"#set_var EASYRSA_SSL_CONF\t\"$EASYRSA/openssl-easyrsa.cnf\"\n"
"#set_var EASYRSA_REQ_CN\t\t\"ChangeMe\"\n"
"#set_var EASYRSA_DIGEST\t\t\"sha256\"\n"
"#set_var EASYRSA_BATCH\t\t\"\"\n"
"$ </computeroutput>"
msgstr ""

msgid "Now we prepare the public key infrastructure directory with the following command:"
msgstr ""

msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>./easyrsa init-pki\n"
"</userinput><computeroutput>\n"
"Note: using Easy-RSA configuration from: ./vars\n"
"\n"
"init-pki complete; you may now create a CA or requests.\n"
"Your newly created PKI dir is: /home/roland/pki-falcot/pki\n"
"</computeroutput>"
msgstr ""

msgid "The next step is the creation of the CA's key pair itself (the two parts of the key pair will be stored under <filename>pki/ca.crt</filename> and <filename>pki/private/ca.key</filename> during this step). We can add the option <literal>nopass</literal> to avoid entering a password each time the private key is used:"
msgstr ""

msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>./easyrsa build-ca nopass</userinput>\n"
"<computeroutput>\n"
"Note: using Easy-RSA configuration from: ./vars\n"
"\n"
"Using SSL: openssl OpenSSL 1.1.1b  26 Feb 2019\n"
"Generating RSA private key, 2048 bit long modulus (2 primes)\n"
"......................................................................................+++++\n"
"......................+++++\n"
"e is 65537 (0x010001)\n"
"You are about to be asked to enter information that will be incorporated\n"
"into your certificate request.\n"
"What you are about to enter is what is called a Distinguished Name or a DN.\n"
"There are quite a few fields but you can leave some blank\n"
"For some fields there will be a default value,\n"
"If you enter '.', the field will be left blank.\n"
"-----\n"
"Common Name (eg: your user, host, or server name) [Easy-RSA CA]:\n"
"\n"
"CA creation complete and you may now import and sign cert requests.\n"
"Your new CA certificate file for publishing is at:\n"
"/home/roland/pki-falcot/pki/ca.crt\n"
"\n"
"</computeroutput>"
msgstr ""

msgid "The certificate can now be created, as well as the Diffie-Hellman parameters required for the server side of an SSL/TLS connection. They want to use it for a VPN server (see section <xref linkend=\"sect.virtual-private-network\" />) that is identified by the DNS name <literal>vpn.falcot.com</literal>; this name is re-used for the generated key files (<filename>keys/vpn.falcot.com.crt</filename> for the public certificate, <filename>keys/vpn.falcot.com.key</filename> for the private key):"
msgstr ""

msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>./easyrsa gen-req vpn.falcot.com nopass\n"
"</userinput><computeroutput>Note: using Easy-RSA configuration from: ./vars\n"
"\n"
"Using SSL: openssl OpenSSL 1.1.1b  26 Feb 2019\n"
"Generating a RSA private key\n"
".................................................................................+++++\n"
"........+++++\n"
"writing new private key to '/home/roland/pki-falcot/pki/private/vpn.falcot.com.key.E5c3RGJBUd'\n"
"-----\n"
"You are about to be asked to enter information that will be incorporated\n"
"into your certificate request.\n"
"What you are about to enter is what is called a Distinguished Name or a DN.\n"
"There are quite a few fields but you can leave some blank\n"
"For some fields there will be a default value,\n"
"If you enter '.', the field will be left blank.\n"
"-----\n"
"Common Name (eg: your user, host, or server name) [vpn.falcot.com]:\n"
"\n"
"Keypair and certificate request completed. Your files are:\n"
"req: /home/roland/pki-falcot/pki/reqs/vpn.falcot.com.req\n"
"key: /home/roland/pki-falcot/pki/private/vpn.falcot.com.key\n"
"\n"
"$ </computeroutput><userinput>./easyrsa sign-req server vpn.falcot.com\n"
"</userinput><computeroutput>\n"
"Note: using Easy-RSA configuration from: ./vars\n"
"\n"
"Using SSL: openssl OpenSSL 1.1.1b  26 Feb 2019\n"
"\n"
"\n"
"You are about to sign the following certificate.\n"
"Please check over the details shown below for accuracy. Note that this request\n"
"has not been cryptographically verified. Please be sure it came from a trusted\n"
"source or that you have verified the request checksum with the sender.\n"
"\n"
"Request subject, to be signed as a server certificate for 1080 days:\n"
"\n"
"subject=\n"
"    commonName                = vpn.falcot.com\n"
"\n"
"\n"
"Type the word 'yes' to continue, or any other input to abort.\n"
"  Confirm request details: <userinput>yes\n"
"</userinput>Using configuration from /home/roland/pki-falcot/pki/safessl-easyrsa.cnf\n"
"Check that the request matches the signature\n"
"Signature ok\n"
"The Subject's Distinguished Name is as follows\n"
"commonName            :ASN.1 12:'vpn.falcot.com'\n"
"Certificate is to be certified until Jun 14 10:44:44 2022 GMT (1080 days)\n"
"\n"
"Write out database with 1 new entries\n"
"Data Base Updated\n"
"\n"
"Certificate created at: /home/roland/pki-falcot/pki/issued/vpn.falcot.com.crt\n"
"\n"
"$ </computeroutput><userinput>./easyrsa gen-dh\n"
"</userinput><computeroutput>\n"
"Note: using Easy-RSA configuration from: ./vars\n"
"\n"
"Using SSL: openssl OpenSSL 1.1.1b  26 Feb 2019\n"
"Generating DH parameters, 2048 bit long safe prime, generator 2\n"
"This is going to take a long time\n"
"[…]\n"
"DH parameters of size 2048 created at /home/roland/pki-falcot/pki/dh.pem\n"
"\n"
"</computeroutput>"
msgstr ""

msgid "The following step creates certificates for the VPN clients; one certificate is required for each computer or person allowed to use the VPN:"
msgstr ""

msgid ""
"\n"
"<computeroutput>$ </computeroutput><userinput>./easyrsa build-client-full JoeSmith nopass\n"
"</userinput><computeroutput>\n"
"Note: using Easy-RSA configuration from: ./vars\n"
"\n"
"Using SSL: openssl OpenSSL 1.1.1d  10 Sep 2019\n"
"Generating a RSA private key\n"
".......................................................+++++\n"
"...........................+++++\n"
"writing new private key to '/root/pki-falcot/pki/private/JoeSmith.key.Tgr8kk0a6a'\n"
"-----\n"
"Using configuration from /root/pki-falcot/pki/safessl-easyrsa.cnf\n"
"Check that the request matches the signature\n"
"Signature ok\n"
"The Subject's Distinguished Name is as follows\n"
"commonName            :ASN.1 12:'JoeSmith'\n"
"Certificate is to be certified until Feb 20 04:52:43 2023 GMT (1080 days)\n"
"\n"
"Write out database with 1 new entries\n"
"Data Base Updated\n"
"</computeroutput>"
msgstr ""

msgid "Virtual Private Network"
msgstr ""

msgid "A <emphasis>Virtual Private Network</emphasis> (VPN for short) is a way to link two different local networks through the Internet by way of a tunnel; the tunnel is usually encrypted for confidentiality. VPNs are often used to integrate a remote machine within a company's local network."
msgstr ""

msgid "<primary>network</primary><secondary>virtual private</secondary>"
msgstr ""

msgid "<primary>VPN</primary>"
msgstr ""

msgid "<primary>virtual private network</primary>"
msgstr ""

msgid "Several tools provide this functionality. OpenVPN is an efficient solution, easy to deploy and maintain, based on SSL/TLS. Another possibility is using IPsec to encrypt IP traffic between two machines; this encryption is transparent, which means that applications running on these hosts need not be modified to take the VPN into account. SSH can also be used to provide a VPN, in addition to its more conventional features. Finally, a VPN can be established using Microsoft's PPTP protocol. Other solutions exist, but are beyond the focus of this book."
msgstr ""

msgid "OpenVPN"
msgstr ""

msgid "<primary>OpenVPN</primary>"
msgstr ""

msgid "OpenVPN is a piece of software dedicated to creating virtual private networks. Its setup involves creating virtual network interfaces on the VPN server and on the client(s); both <literal>tun</literal> (for IP-level tunnels) and <literal>tap</literal> (for Ethernet-level tunnels) interfaces are supported. In practice, <literal>tun</literal> interfaces will most often be used except when the VPN clients are meant to be integrated into the server's local network by way of an Ethernet bridge."
msgstr ""

msgid "OpenVPN relies on OpenSSL for all the SSL/TLS cryptography and associated features (confidentiality, authentication, integrity, non-repudiation). It can be configured either with a shared private key or using X.509 certificates based on a public key infrastructure. The latter configuration is strongly preferred since it allows greater flexibility when faced with a growing number of roaming users accessing the VPN."
msgstr ""

msgid "Configuring the OpenVPN Server"
msgstr ""

msgid "After all certificates have been created (follow the instructions from <xref linkend=\"sect.easy-rsa\" />), they need to be copied where appropriate: the root certificate's public key (<filename>pki/ca.crt</filename>) will be stored on all machines (both server and clients) as <filename>/etc/ssl/certs/Falcot_CA.crt</filename>. The server's certificate is installed only on the server (<filename>pki/issued/vpn.falcot.com.crt</filename> goes to <filename>/etc/ssl/certs/vpn.falcot.com.crt</filename>, and <filename>pki/private/vpn.falcot.com.key</filename> goes to <filename>/etc/ssl/private/vpn.falcot.com.key</filename> with restricted permissions so that only the administrator can read it), with the corresponding Diffie-Hellman parameters (<filename>pki/dh.pem</filename>) installed to <filename>/etc/openvpn/dh.pem</filename>. Client certificates are installed on the corresponding VPN client in a similar fashion."
msgstr ""

msgid "By default, the OpenVPN initialization script tries starting all virtual private networks defined in <filename>/etc/openvpn/*.conf</filename>. Setting up a VPN server is therefore a matter of storing a corresponding configuration file in this directory. A good starting point is <filename>/usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz</filename>, which leads to a rather standard server. Of course, some parameters need to be adapted: <literal>ca</literal>, <literal>cert</literal>, <literal>key</literal> and <literal>dh</literal> need to describe the selected locations (respectively, <literal>/etc/ssl/certs/Falcot_CA.crt</literal>, <literal>/etc/ssl/vpn.falcot.com.crt</literal>, <literal>/etc/ssl/private/vpn.falcot.com.key</literal> and <literal>/etc/openvpn/dh.pem</literal>). The <literal>server 10.8.0.0 255.255.255.0</literal> directive defines the subnet to be used by the VPN; the server uses the first IP address in that range (<literal>10.8.0.1</literal>) and the rest of the addresses are allocated to clients."
msgstr ""

msgid "With this configuration, starting OpenVPN creates the virtual network interface, usually under the <literal>tun0</literal> name. However, firewalls are often configured at the same time as the real network interfaces, which happens before OpenVPN starts. Good practice therefore recommends creating a persistent virtual network interface, and configuring OpenVPN to use this pre-existing interface. This further allows choosing the name for this interface. To this end, <command>openvpn --mktun --dev vpn --dev-type tun</command> creates a virtual network interface named <literal>vpn</literal> with type <literal>tun</literal>; this command can easily be integrated in the firewall configuration script, or in an <literal>up</literal> directive of the <filename>/etc/network/interfaces</filename> file, or a <emphasis role=\"package\">udev</emphasis> rule can be added to that end. The OpenVPN configuration file must also be updated accordingly, with the <literal>dev vpn</literal> and <literal>dev-type tun</literal> directives."
msgstr ""

msgid "Barring further action, VPN clients can only access the VPN server itself by way of the <literal>10.8.0.1</literal> address. Granting the clients access to the local network (192.168.0.0/24), requires adding a <literal>push route 192.168.0.0 255.255.255.0</literal> directive to the OpenVPN configuration so that VPN clients automatically get a network route telling them that this network is reachable by way of the VPN. Furthermore, machines on the local network also need to be informed that the route to the VPN goes through the VPN server (this automatically works when the VPN server is installed on the gateway). Alternatively, the VPN server can be configured to perform IP masquerading so that connections coming from VPN clients appear as if they are coming from the VPN server instead (see <xref linkend=\"sect.gateway\" />)."
msgstr ""

msgid "Configuring the OpenVPN Client"
msgstr ""

msgid "Setting up an OpenVPN client also requires creating a configuration file in <filename>/etc/openvpn/</filename>. A standard configuration can be obtained by using <filename>/usr/share/doc/openvpn/examples/sample-config-files/client.conf</filename> as a starting point. The <literal>remote vpn.falcot.com 1194</literal> directive describes the address and port of the OpenVPN server; the <literal>ca</literal>, <literal>cert</literal> and <literal>key</literal> also need to be adapted to describe the locations of the key files."
msgstr ""

msgid "If the VPN should not be started automatically on boot, set the <literal>AUTOSTART</literal> directive to <literal>none</literal> in the <filename>/etc/default/openvpn</filename> file. Starting or stopping a given VPN connection is always possible with the commands <command>systemctl start openvpn@<replaceable>name</replaceable></command> and <command>systemctl stop openvpn@<replaceable>name</replaceable></command> (where the connection <replaceable>name</replaceable> matches the one defined in <filename>/etc/openvpn/<replaceable>name</replaceable>.conf</filename>)."
msgstr ""

msgid "The <emphasis role=\"pkg\">network-manager-openvpn-gnome</emphasis> package contains an extension to Network Manager (see <xref linkend=\"sect.roaming-network-config\" />) that allows managing OpenVPN virtual private networks. This allows every user to configure OpenVPN connections graphically and to control them from the network management icon. <indexterm><primary><emphasis role=\"pkg\">network-manager-openvpn-gnome</emphasis></primary></indexterm>"
msgstr ""

msgid "Virtual Private Network with SSH"
msgstr ""

msgid "<primary>SSH</primary>"
msgstr ""

msgid "<primary>PPP</primary>"
msgstr "<primary>PPP</primary>"

msgid "There are actually two ways of creating a virtual private network with SSH. The historic one involves establishing a PPP layer over the SSH link. This method is described in a HOWTO document: <ulink type=\"block\" url=\"https://www.tldp.org/HOWTO/ppp-ssh/\" />"
msgstr ""

msgid "The second method is more recent, and was introduced with OpenSSH 4.3; it is now possible for OpenSSH to create virtual network interfaces (<literal>tun*</literal>) on both sides of an SSH connection, and these virtual interfaces can be configured exactly as if they were physical interfaces. The tunneling system must first be enabled by setting <literal>PermitTunnel</literal> to “yes” in the SSH server configuration file (<filename>/etc/ssh/sshd_config</filename>). When establishing the SSH connection, the creation of a tunnel must be explicitly requested with the <literal>-w any:any</literal> option (<literal>any</literal> can be replaced with the desired <literal>tun</literal> device number). This requires the user to have administrator privilege on both sides, so as to be able to create the network device (in other words, the connection must be established as root)."
msgstr ""

msgid "Both methods for creating a virtual private network over SSH are quite straightforward. However, the VPN they provide is not the most efficient available; in particular, it does not handle high levels of traffic very well."
msgstr ""

msgid "The explanation is that when a TCP/IP stack is encapsulated within a TCP/IP connection (for SSH), the TCP protocol is used twice, once for the SSH connection and once within the tunnel. This leads to problems, especially due to the way TCP adapts to network conditions by altering timeout delays. The following site describes the problem in more detail: <ulink type=\"block\" url=\"http://sites.inka.de/sites/bigred/devel/tcp-tcp.html\" />"
msgstr ""

msgid "VPNs over SSH should therefore be restricted to one-off tunnels with no performance constraints."
msgstr ""

msgid "IPsec"
msgstr ""

msgid "<primary>IPsec</primary>"
msgstr ""

msgid "<primary><command>libreswan</command></primary>"
msgstr ""

msgid "<primary><command>strongswan</command></primary>"
msgstr ""

msgid "IPsec, despite being the standard in IP VPNs, is rather more involved in its implementation. The IPsec engine itself is integrated in the Linux kernel; the required user-space parts, the control and configuration tools, are provided by the <emphasis role=\"pkg\">libreswan</emphasis> package or the <emphasis role=\"pkg\">strongswan</emphasis> package. Here we describe briefly the <emphasis role=\"pkg\">libreswan</emphasis> option."
msgstr ""

msgid "First, we install the <emphasis role=\"pkg\">libreswan</emphasis> package. In concrete terms, each host's <filename>/etc/ipsec.conf</filename> contains the parameters for <emphasis>IPsec tunnels</emphasis> (or <emphasis>Security Associations</emphasis>, in the IPsec terminology) that the host is concerned with. There are many configuration examples in <filename>/usr/share/doc/libreswan/</filename>, but Libreswan's online documentation has more examples with explanations: <ulink type=\"block\" url=\"https://libreswan.org/wiki/\" />"
msgstr ""

msgid "The IPsec service can be controlled with <command>systemctl</command>; for example, <command>systemctl start ipsec</command> will start the IPsec service."
msgstr ""

msgid "<primary>IKE</primary>"
msgstr ""

msgid "<primary>IPsec</primary><secondary>IPsec Key Exchange</secondary>"
msgstr ""

msgid "<primary><command>setkey</command></primary>"
msgstr ""

msgid "In spite of its status as the reference, the complexity of setting up IPsec restricts its usage in practice. OpenVPN-based solutions will generally be preferred when the required tunnels are neither too many nor too dynamic."
msgstr ""

msgid "<emphasis>CAUTION</emphasis> IPsec and NAT"
msgstr ""

msgid "NATing firewalls and IPsec do not work well together: since IPsec signs the packets, any change on these packets that the firewall might perform will void the signature, and the packets will be rejected at their destination. Various IPsec implementations now include the <emphasis>NAT-T</emphasis> technique (for <emphasis>NAT Traversal</emphasis>), which basically encapsulates the IPsec packet within a standard UDP packet."
msgstr ""

msgid "<primary>NAT-T</primary>"
msgstr ""

msgid "<primary>NAT Traversal</primary>"
msgstr ""

msgid "<emphasis>SECURITY</emphasis> IPsec and firewalls"
msgstr ""

msgid "The standard mode of operation of IPsec involves data exchanges on UDP port 500 for key exchanges (also on UDP port 4500 in the case that NAT-T is in use). Moreover, IPsec packets use two dedicated IP protocols that the firewall must let through; reception of these packets is based on their protocol numbers, 50 (ESP) and 51 (AH)."
msgstr ""

msgid "<primary>ESP, protocol</primary>"
msgstr ""

msgid "<primary>AH, protocol</primary>"
msgstr ""

msgid "<primary>protocol</primary><secondary>AH</secondary>"
msgstr ""

msgid "<primary>protocol</primary><secondary>ESP</secondary>"
msgstr ""

msgid "PPTP"
msgstr ""

msgid "PPTP (for <emphasis>Point-to-Point Tunneling Protocol</emphasis>) uses two communication channels, one for control data and one for payload data; the latter uses the GRE protocol (<emphasis>Generic Routing Encapsulation</emphasis>). A standard PPP link is then set up over the data exchange channel."
msgstr ""

msgid "<primary>PPTP</primary>"
msgstr "<primary>PPTP</primary>"

msgid "<primary>Point-to-Point Tunneling Protocol</primary>"
msgstr ""

msgid "<primary>GRE, protocol</primary>"
msgstr ""

msgid "<primary>protocol</primary><secondary>GRE</secondary>"
msgstr ""

msgid "Configuring the Client"
msgstr ""

msgid "The <emphasis role=\"pkg\">pptp-linux</emphasis> package contains an easily-configured PPTP client for Linux. The following instructions take their inspiration from the official documentation: <ulink type=\"block\" url=\"http://pptpclient.sourceforge.net/howto-debian.phtml\" />"
msgstr ""

msgid "<primary><emphasis role=\"pkg\">pptp-linux</emphasis></primary>"
msgstr ""

msgid "The Falcot administrators created several files: <filename>/etc/ppp/options.pptp</filename>, <filename>/etc/ppp/peers/falcot</filename>, <filename>/etc/ppp/ip-up.d/falcot</filename>, and <filename>/etc/ppp/ip-down.d/falcot</filename>."
msgstr ""

msgid "The <filename>/etc/ppp/options.pptp</filename> file"
msgstr ""

msgid ""
"\n"
"# PPP options used for a PPTP connection\n"
"lock\n"
"noauth\n"
"nobsdcomp\n"
"nodeflate"
msgstr ""

msgid "The <filename>/etc/ppp/peers/falcot</filename> file"
msgstr ""

msgid ""
"\n"
"# vpn.falcot.com is the PPTP server\n"
"pty \"pptp vpn.falcot.com --nolaunchpppd\"\n"
"# the connection will identify as the \"vpn\" user\n"
"user vpn\n"
"remotename pptp\n"
"# encryption is needed\n"
"require-mppe-128\n"
"file /etc/ppp/options.pptp\n"
"ipparam falcot"
msgstr ""

msgid "The <filename>/etc/ppp/ip-up.d/falcot</filename> file"
msgstr ""

msgid ""
"\n"
"# Create the route to the Falcot network\n"
"if [ \"$6\" = \"falcot\" ]; then\n"
"  # 192.168.0.0/24 is the (remote) Falcot network\n"
"  ip route add 192.168.0.0/24 dev $1\n"
"fi"
msgstr ""

msgid "The <filename>/etc/ppp/ip-down.d/falcot</filename> file"
msgstr ""

msgid ""
"\n"
"# Delete the route to the Falcot network\n"
"if [ \"$6\" = \"falcot\" ]; then\n"
"  # 192.168.0.0/24 is the (remote) Falcot network\n"
"  ip route del 192.168.0.0/24 dev $1\n"
"fi"
msgstr ""

msgid "<emphasis>SECURITY</emphasis> MPPE"
msgstr ""

msgid "Securing PPTP involves using the MPPE feature (<emphasis>Microsoft Point-to-Point Encryption</emphasis>), which is available in official Debian kernels as a module."
msgstr ""

msgid "<primary>MPPE</primary>"
msgstr ""

msgid "<primary>Microsoft</primary><secondary>Point-to-Point Encryption</secondary>"
msgstr ""

msgid "Configuring the Server"
msgstr ""

msgid "<emphasis>CAUTION</emphasis> PPTP and firewalls"
msgstr ""

msgid "Intermediate firewalls need to be configured to let through IP packets using protocol 47 (GRE). Moreover, the PPTP server's port 1723 needs to be open so that the communication channel can happen."
msgstr ""

msgid "<command>pptpd</command> is the PPTP server for Linux. Its main configuration file, <filename>/etc/pptpd.conf</filename>, requires very few changes: <emphasis>localip</emphasis> (local IP address) and <emphasis>remoteip</emphasis> (remote IP address). In the example below, the PPTP server always uses the <literal>192.168.0.199</literal> address, and PPTP clients receive IP addresses from <literal>192.168.0.200</literal> to <literal>192.168.0.250</literal>."
msgstr ""

msgid "The <filename>/etc/pptpd.conf</filename> file"
msgstr ""

msgid ""
"\n"
"# TAG: speed\n"
"#\n"
"#       Specifies the speed for the PPP daemon to talk at.\n"
"#\n"
"speed 115200\n"
"\n"
"# TAG: option\n"
"#\n"
"#       Specifies the location of the PPP options file.\n"
"#       By default PPP looks in '/etc/ppp/options'\n"
"#\n"
"option /etc/ppp/pptpd-options\n"
"\n"
"# TAG: debug\n"
"#\n"
"#       Turns on (more) debugging to syslog\n"
"#\n"
"# debug\n"
"\n"
"# TAG: localip\n"
"# TAG: remoteip\n"
"#\n"
"#       Specifies the local and remote IP address ranges.\n"
"#\n"
"#       You can specify single IP addresses separated by commas or you can\n"
"#       specify ranges, or both. For example:\n"
"#\n"
"#               192.168.0.234,192.168.0.245-249,192.168.0.254\n"
"#\n"
"#       IMPORTANT RESTRICTIONS:\n"
"#\n"
"#       1. No spaces are permitted between commas or within addresses.\n"
"#\n"
"#       2. If you give more IP addresses than MAX_CONNECTIONS, it will\n"
"#          start at the beginning of the list and go until it gets\n"
"#          MAX_CONNECTIONS IPs. Others will be ignored.\n"
"#\n"
"#       3. No shortcuts in ranges! ie. 234-8 does not mean 234 to 238,\n"
"#          you must type 234-238 if you mean this.\n"
"#\n"
"#       4. If you give a single localIP, that's ok - all local IPs will\n"
"#          be set to the given one. You MUST still give at least one remote\n"
"#          IP for each simultaneous client.\n"
"#\n"
"#localip 192.168.0.234-238,192.168.0.245\n"
"#remoteip 192.168.1.234-238,192.168.1.245\n"
"#localip 10.0.1.1\n"
"#remoteip 10.0.1.2-100\n"
"localip 192.168.0.199\n"
"remoteip 192.168.0.200-250"
msgstr ""

msgid "The PPP configuration used by the PPTP server also requires a few changes in <filename>/etc/ppp/pptpd-options</filename>. The important parameters are the server name (<literal>pptp</literal>), the domain name (<literal>falcot.com</literal>), and the IP addresses for DNS and WINS servers."
msgstr ""

msgid "The <filename>/etc/ppp/pptpd-options</filename> file"
msgstr ""

msgid ""
"\n"
"## turn pppd syslog debugging on\n"
"#debug\n"
"\n"
"## change 'servername' to whatever you specify as your server name in chap-secrets\n"
"name pptp\n"
"## change the domainname to your local domain\n"
"domain falcot.com\n"
"\n"
"## these are reasonable defaults for WinXXXX clients\n"
"## for the security related settings\n"
"# The Debian pppd package now supports both MSCHAP and MPPE, so enable them\n"
"# here. Please note that the kernel support for MPPE must also be present!\n"
"auth\n"
"require-chap\n"
"require-mschap\n"
"require-mschap-v2\n"
"require-mppe-128\n"
"\n"
"## Fill in your addresses\n"
"ms-dns 192.168.0.1\n"
"ms-wins 192.168.0.1\n"
"\n"
"## Fill in your netmask\n"
"netmask 255.255.255.0\n"
"\n"
"## some defaults\n"
"nodefaultroute\n"
"proxyarp\n"
"lock"
msgstr ""

msgid "The last step involves registering the <literal>vpn</literal> user (and the associated password) in the <filename>/etc/ppp/chap-secrets</filename> file. Contrary to other instances where an asterisk (<literal>*</literal>) would work, the server name must be filled explicitly here. Furthermore, Windows PPTP clients identify themselves under the <literal><replaceable>DOMAIN</replaceable>\\\\<replaceable>USER</replaceable></literal> form, instead of only providing a user name. This explains why the file also mentions the <literal>FALCOT\\\\vpn</literal> user. It is also possible to specify individual IP addresses for users; an asterisk in this field specifies that dynamic addressing should be used."
msgstr ""

msgid "The <filename>/etc/ppp/chap-secrets</filename> file"
msgstr ""

msgid ""
"\n"
"# Secrets for authentication using CHAP\n"
"# client        server  secret      IP addresses\n"
"vpn             pptp    f@Lc3au     *\n"
"FALCOT\\\\vpn     pptp    f@Lc3au     *"
msgstr ""

msgid "<emphasis>SECURITY</emphasis> PPTP vulnerabilities"
msgstr ""

msgid "Microsoft's first PPTP implementation drew severe criticism because it had many security vulnerabilities; most have since then been fixed in more recent versions. The configuration documented in this section uses the latest version of the protocol. Be aware though that removing some options (such as <literal>require-mppe-128</literal> and <literal>require-mschap-v2</literal>) would make the service vulnerable again."
msgstr ""

msgid "Quality of Service"
msgstr ""

msgid "Principle and Mechanism"
msgstr ""

msgid "<emphasis>Quality of Service</emphasis> (or <emphasis>QoS</emphasis> for short) refers to a set of techniques that guarantee or improve the quality of the service provided to applications. The most popular such technique involves classifying the network traffic into categories, and differentiating the handling of traffic according to which category it belongs to. The main application of this differentiated services concept is <emphasis>traffic shaping</emphasis>, which limits the data transmission rates for connections related to some services and/or hosts so as not to saturate the available bandwidth and starve important other services. Traffic shaping is a particularly good fit for TCP traffic, since this protocol automatically adapts to available bandwidth."
msgstr ""

msgid "<primary>QoS</primary>"
msgstr ""

msgid "<primary>quality of service</primary>"
msgstr ""

msgid "<primary>quality</primary><secondary>of service</secondary>"
msgstr ""

msgid "<primary>service</primary><secondary>quality</secondary>"
msgstr ""

msgid "<emphasis>CULTURE</emphasis> Net neutrality and QoS"
msgstr ""

msgid "Network neutrality is achieved when Internet service providers treat all Internet communications equally, that is, without any access limitation based on content, user, website, destination address, etc."
msgstr ""

msgid "Quality of service can be implemented in a net neutral Internet, but only if Internet service providers can't charge a special fee for a higher-quality service."
msgstr ""

msgid "<primary>net neutrality</primary>"
msgstr ""

msgid "It is also possible to alter the priorities on traffic, which allows prioritizing packets related to interactive services (such as <command>ssh</command> and <command>telnet</command>) or to services that only deal with small blocks of data."
msgstr ""

msgid "The Debian kernels include the features required for QoS along with their associated modules. These modules are many, and each of them provides a different service, most notably by way of special schedulers for the queues of IP packets; the wide range of available scheduler behaviors spans the whole range of possible requirements."
msgstr ""

msgid "<emphasis>CULTURE</emphasis> LARTC — <emphasis>Linux Advanced Routing &amp; Traffic Control</emphasis>"
msgstr ""

msgid "The <emphasis>Linux Advanced Routing &amp; Traffic Control</emphasis> HOWTO is the reference document covering everything there is to know about network quality of service. <ulink type=\"block\" url=\"https://www.lartc.org/howto/\" />"
msgstr ""

msgid "<primary>routing</primary><secondary>advanced</secondary>"
msgstr ""

msgid "<primary>traffic</primary><secondary>control</secondary>"
msgstr ""

msgid "<primary>control of traffic</primary>"
msgstr ""

msgid "Configuring and Implementing"
msgstr ""

msgid "QoS parameters are set through the <command>tc</command> command (provided by the <emphasis role=\"pkg\">iproute</emphasis> package). Since its interface is quite complex, using higher-level tools is recommended."
msgstr ""

msgid "<primary><emphasis>iproute</emphasis></primary>"
msgstr ""

msgid "<primary><command>tc</command></primary>"
msgstr ""

msgid "Reducing Latencies: <command>wondershaper</command>"
msgstr ""

msgid "The main purpose of <command>wondershaper</command> (in the similarly-named package) is to minimize latencies independent of network load. This is achieved by limiting total traffic to a value that falls just short of the link saturation value."
msgstr ""

msgid "<primary><command>wondershaper</command></primary>"
msgstr ""

msgid "<primary>limitation of traffic</primary>"
msgstr ""

msgid "<primary>traffic</primary><secondary>limitation</secondary>"
msgstr ""

msgid "Once a network interface is configured, setting up this traffic limitation is achieved by running <command>wondershaper <replaceable>interface</replaceable> <replaceable>download_rate</replaceable> <replaceable>upload_rate</replaceable></command>. The interface can be <literal>eth0</literal> or <literal>ppp0</literal> for example, and both rates are expressed in kilobits per second. The <command>wondershaper remove <replaceable>interface</replaceable></command> command disables traffic control on the specified interface."
msgstr ""

msgid "For an Ethernet connection, this script is best called right after the interface is configured. This is done by adding <literal>up</literal> and <literal>down</literal> directives to the <filename>/etc/network/interfaces</filename> file allowing declared commands to be run, respectively, after the interface is configured and before it is deconfigured. For example:"
msgstr ""

msgid "Changes in the <filename>/etc/network/interfaces</filename> file"
msgstr ""

msgid ""
"\n"
"iface eth0 inet dhcp\n"
"    up /sbin/wondershaper eth0 500 100\n"
"    down /sbin/wondershaper remove eth0"
msgstr ""

msgid "In the PPP case, creating a script that calls <command>wondershaper</command> in <filename>/etc/ppp/ip-up.d/</filename> will enable traffic control as soon as the connection is up."
msgstr ""

msgid "<emphasis>GOING FURTHER</emphasis> Optimal configuration"
msgstr ""

msgid "The <filename>/usr/share/doc/wondershaper/README.Debian.gz</filename> file describes, in some detail, the configuration method recommended by the package maintainer. In particular, it advises measuring the download and upload speeds so as to best evaluate real limits."
msgstr ""

msgid "Standard Configuration"
msgstr ""

msgid "Barring a specific QoS configuration, the Linux kernel uses the <literal>pfifo_fast</literal> queue scheduler, which provides a few interesting features by itself. The priority of each processed IP packet is based on the DSCP field (<emphasis>Differentiated of Services Code Point</emphasis>) of this packet; modifying this 6-bit field is enough to take advantage of the scheduling features. Refer to <ulink url=\"https://en.wikipedia.org/wiki/Differentiated_services#Class_Selector\" /> for more information."
msgstr ""

msgid "<primary>DSCP</primary>"
msgstr ""

msgid "<primary>Differentiated Services Code Point</primary>"
msgstr ""

msgid "The DSCP field can be set by applications that generate IP packets, or modified on the fly by <emphasis>netfilter</emphasis>. The following rules are sufficient to increase responsiveness for a server's SSH service, note that the DSCP field must be set in hexadecimal:"
msgstr ""

msgid ""
"\n"
"nft add table ip mangle\n"
"nft add rule ip mangle PREROUTING tcp sport 22 counter ip dscp set 0x04\n"
"nft add rule ip mangle PREROUTING tcp dport 22 counter ip dscp set 0x04"
msgstr ""

msgid "Dynamic Routing"
msgstr ""

msgid "<primary>routing</primary><secondary>dynamic</secondary>"
msgstr ""

msgid "<primary><command>quagga</command></primary>"
msgstr ""

msgid "<primary><command>zebra</command></primary>"
msgstr ""

msgid "The reference tool for dynamic routing is currently <command>quagga</command>, from the similarly-named package; it used to be <command>zebra</command> until development of the latter stopped. However, <command>quagga</command> kept the names of the programs for compatibility reasons which explains the <command>zebra</command> commands below."
msgstr ""

msgid "<emphasis>BACK TO BASICS</emphasis> Dynamic routing"
msgstr ""

msgid "Dynamic routing allows routers to adjust, in real time, the paths used for transmitting IP packets. Each protocol involves its own method of defining routes (shortest path, use routes advertised by peers, and so on)."
msgstr ""

msgid "In the Linux kernel, a route links a network device to a set of machines that can be reached through this device. The <command>ip</command> command, when <literal>route</literal> is used as the first argument, defines new routes and displays existing ones. The <command>route</command> command was used for that purpose, but it is deprecated in favor of <command>ip</command>."
msgstr ""

msgid "<primary><command>route</command></primary>"
msgstr ""

msgid "<primary><command>ip route</command></primary>"
msgstr ""

msgid "Quagga is a set of daemons cooperating to define the routing tables to be used by the Linux kernel; each routing protocol (most notably BGP, OSPF and RIP) provides its own daemon. The <command>zebra</command> daemon collects information from other daemons and handles static routing tables accordingly. The other daemons are known as <command>bgpd</command>, <command>ospfd</command>, <command>ospf6d</command>, <command>ripd</command>, <command>ripngd</command>, and <command>isisd</command>."
msgstr ""

msgid "<primary>OSPF</primary>"
msgstr ""

msgid "<primary>BGP</primary>"
msgstr ""

msgid "<primary>RIP</primary>"
msgstr ""

msgid "<primary>IS-IS</primary>"
msgstr ""

msgid "<primary><command>bgpd</command></primary>"
msgstr ""

msgid "<primary><command>ospfd</command></primary>"
msgstr ""

msgid "<primary><command>ospf6d</command></primary>"
msgstr ""

msgid "<primary><command>ripd</command></primary>"
msgstr ""

msgid "<primary><command>ripngd</command></primary>"
msgstr ""

msgid "<primary><command>isisd</command></primary>"
msgstr ""

msgid "Daemons are enabled by creating the <filename>/etc/quagga/<replaceable>daemon</replaceable>.conf</filename> config file, daemon being the name of the daemon to use; this file must belong to the <literal>quagga</literal> user and group in order for the <filename>/etc/init.d/zebra</filename> script to invoke the daemon. The package <emphasis role=\"pkg\">quagga-core</emphasis> provides configuration examples under <filename>/usr/share/doc/quagga-core/examples/</filename>."
msgstr ""

msgid "The configuration of each of these daemons requires knowledge of the routing protocol in question. These protocols cannot be described in detail here, but <emphasis role=\"pkg\">quagga-doc</emphasis> provides ample explanation in the form of an <command>info</command> file. The same contents may be more easily browsed as HTML on the Quagga website: <ulink type=\"block\" url=\"http://www.nongnu.org/quagga/docs/docs-info.html\" />"
msgstr ""

msgid "In addition, the syntax is very close to a standard router's configuration interface, and network administrators will adapt quickly to <command>quagga</command>."
msgstr ""

msgid "<emphasis>IN PRACTICE</emphasis> OSPF, BGP or RIP?"
msgstr ""

msgid "<acronym>OSPF</acronym> (Open Shortest Path First) is generally the best protocol to use for dynamic routing on private networks, but <acronym>BGP</acronym> (Border Gateway Protocol) is more common for Internet-wide routing. <acronym>RIP</acronym> (Routing Information Protocol) is rather ancient, and hardly used anymore."
msgstr ""

msgid "IPv6, successor to IPv4, is a new version of the IP protocol designed to fix its flaws, most notably the scarcity of available IP addresses. This protocol handles the network layer; its purpose is to provide a way to address machines, to convey data to their intended destination, and to handle data fragmentation if needed (in other words, to split packets into chunks with a size that depends on the network links to be used on the path and to reassemble the chunks in their proper order on arrival)."
msgstr ""

msgid "Debian kernels include IPv6 handling in the core kernel (with the exception of some architectures that have it compiled as a module named <literal>ipv6</literal>). Basic tools such as <command>ping</command> and <command>traceroute</command> have their IPv6 equivalents in <command>ping6</command> and <command>traceroute6</command>, available respectively in the <emphasis role=\"pkg\">iputils-ping</emphasis> and <emphasis role=\"pkg\">iputils-tracepath</emphasis> packages."
msgstr ""

msgid "<primary>IPv6</primary>"
msgstr ""

msgid "<primary><emphasis role=\"pkg\">iputils-ping</emphasis></primary>"
msgstr ""

msgid "<primary><emphasis role=\"pkg\">iputils-tracepath</emphasis></primary>"
msgstr ""

msgid "The IPv6 network is configured similarly to IPv4, in <filename>/etc/network/interfaces</filename>. But if you want that network to be globally available, you must ensure that you have an IPv6-capable router relaying traffic to the global IPv6 network."
msgstr ""

msgid "Example of IPv6 configuration"
msgstr ""

msgid ""
"\n"
"iface eth0 inet6 static\n"
"    address 2001:db8:1234:5::1:1/64\n"
"    # Disabling auto-configuration\n"
"    # autoconf 0\n"
"    # The router is auto-configured and has no fixed address\n"
"    # (accept_ra 1). If it had:\n"
"    # gateway 2001:db8:1234:5::1"
msgstr ""

msgid "IPv6 subnets usually have a netmask of 64 bits. This means that 2<superscript>64</superscript> distinct addresses exist within the subnet. This allows Stateless Address Autoconfiguration (<acronym>SLAAC</acronym>) to pick an address based on the network interface's MAC address. By default, if <acronym>SLAAC</acronym> is activated in your network and IPv6 on your computer, the kernel will automatically find IPv6 routers and configure the network interfaces."
msgstr ""

msgid "This behavior may have privacy implications. If you switch networks frequently, e.g. with a laptop, you might not want your <acronym>MAC</acronym> address being a part of your public IPv6 address. This makes it easy to identify the same device across networks. A solution to this are IPv6 privacy extensions (which Debian enables by default if IPv6 connectivity is detected during initial installation), which will assign an additional randomly generated address to the interface, periodically change them and prefer them for outgoing connections. Incoming connections can still use the address generated by SLAAC. The following example, for use in <filename>/etc/network/interfaces</filename>, activates these privacy extensions."
msgstr ""

msgid "IPv6 privacy extensions"
msgstr ""

msgid ""
"\n"
"iface eth0 inet6 auto\n"
"    # Prefer the randomly assigned addresses for outgoing connections.\n"
"    privext 2"
msgstr ""

msgid "<emphasis>TIP</emphasis> Programs built with IPv6"
msgstr ""

msgid "Many pieces of software need to be adapted to handle IPv6. Most of the packages in Debian have been adapted already, but not all. If your favorite package does not work with IPv6 yet, you can ask for help on the <emphasis>debian-ipv6</emphasis> mailing-list. They might know about an IPv6-aware replacement and could file a bug to get the issue properly tracked. <ulink type=\"block\" url=\"https://lists.debian.org/debian-ipv6/\" />"
msgstr ""

msgid "<primary>IPv6 firewall</primary>"
msgstr ""

msgid "<primary>firewall</primary><secondary>IPv6</secondary>"
msgstr ""

msgid "<primary><command>ip6tables</command></primary>"
msgstr ""

msgid "IPv6 connections can be restricted, in the same fashion as for IPv4. <command>nft</command> can be used to create firewall rules for IPv4 and IPv6 (see <xref linkend=\"sect.nftables\" />)."
msgstr ""

msgid "Tunneling"
msgstr ""

msgid "<emphasis>CAUTION</emphasis> IPv6 tunneling and firewalls"
msgstr ""

msgid "IPv6 tunneling over IPv4 (as opposed to native IPv6) requires the firewall to accept the traffic, which uses IPv4 protocol number 41."
msgstr ""

msgid "If a native IPv6 connection is not available, the fallback method is to use a tunnel over IPv4. Hurricane Electric is one (free) provider of such tunnels: <ulink type=\"block\" url=\"https://tunnelbroker.net\" />"
msgstr ""

msgid "<primary>Hurricane Electric</primary>"
msgstr ""

msgid "<primary>tunnel broker</primary>"
msgstr ""

msgid "To use a Hurricane Electric tunnel, you need to register an account, login, select a free tunnel and edit the file <filename>/etc/network/interfaces</filename> with the generated code."
msgstr ""

msgid "You can install and configure the <command>radvd</command> daemon (from the similarly-named package) if you want to use the configured computer as a router for a local network. This IPv6 configuration daemon has a role similar to <command>dhcpd</command> in the IPv4 world."
msgstr ""

msgid "The <filename>/etc/radvd.conf</filename> configuration file must then be created (see <filename>/usr/share/doc/radvd/examples/simple-radvd.conf</filename> as a starting point). In our case, the only required change is the prefix, which needs to be replaced with the one provided by Hurricane Electric; it can be found in the output of the <command>ip a</command> command, in the block concerning the <literal>he-ipv6</literal> interface."
msgstr ""

msgid "<primary><command>radvd</command></primary>"
msgstr ""

msgid "Then run <command>systemctl start radvd</command>. The IPv6 network should now work."
msgstr ""

msgid "Domain Name Servers (DNS)"
msgstr ""

msgid "<primary>DNS</primary>"
msgstr "<primary>DNS</primary>"

msgid "<primary>server</primary><secondary>name</secondary>"
msgstr ""

msgid "The <emphasis>Domain Name Service</emphasis> (DNS) is a fundamental component of the Internet: it maps host names to IP addresses (and vice-versa), which allows the use of <literal>www.debian.org</literal> instead of <literal>149.20.4.15</literal> or <literal>2001:4f8:1:c::15</literal>."
msgstr ""

msgid "DNS records are organized in zones; each zone matches either a domain (or a subdomain) or an IP address range (since IP addresses are generally allocated in consecutive ranges). A primary server is authoritative on the contents of a zone; secondary servers, usually hosted on separate machines, provide regularly refreshed copies of the primary zone."
msgstr ""

msgid "<primary>zone</primary><secondary>DNS</secondary>"
msgstr ""

msgid "<primary>DNS</primary><secondary>zone</secondary>"
msgstr ""

msgid "Each zone can contain records of various kinds (<emphasis>Resource Records</emphasis>), these are some of the most common:"
msgstr ""

msgid "<literal>A</literal>: IPv4 address. <indexterm><primary>A, DNS record</primary></indexterm>"
msgstr ""

msgid "<literal>CNAME</literal>: alias (<emphasis>canonical name</emphasis>). <indexterm><primary>CNAME, DNS record</primary></indexterm>"
msgstr ""

msgid "<literal>MX</literal>: <emphasis>mail exchange</emphasis>, an email server. This information is used by other email servers to find where to send email addressed to a given address. Each MX record has a priority. The highest-priority server (with the lowest number) is tried first (see sidebar <xref linkend=\"sidebar.smtp\" />); other servers are contacted in order of decreasing priority if the first one does not reply. <indexterm><primary>MX</primary><secondary>DNS record</secondary></indexterm>"
msgstr ""

msgid "<literal>PTR</literal>: mapping of an IP address to a name. Such a record is stored in a “reverse DNS” zone named after the IP address range. For example, <literal>1.168.192.in-addr.arpa</literal> is the zone containing the reverse mapping for all addresses in the <literal>192.168.1.0/24</literal> range. <indexterm><primary>PTR, DNS record</primary></indexterm>"
msgstr ""

msgid "<literal>AAAA</literal>: IPv6 address. <indexterm><primary>AAAA, DNS record</primary></indexterm>"
msgstr ""

msgid "<literal>NS</literal>: maps a name to a name server. Each domain must have at least one NS record. These records point at a DNS server that can answer queries concerning this domain; they usually point at the primary and secondary servers for the domain. These records also allow DNS delegation; for instance, the <literal>falcot.com</literal> zone can include an NS record for <literal>internal.falcot.com</literal>, which means that the <literal>internal.falcot.com</literal> zone is handled by another server. Of course, this server must declare an <literal>internal.falcot.com</literal> zone. <indexterm><primary>NS, DNS record</primary></indexterm>"
msgstr ""

msgid "<primary>record</primary><secondary>DNS</secondary>"
msgstr ""

msgid "<primary>DNS record</primary>"
msgstr ""

msgid "DNS software"
msgstr ""

msgid "The reference name server, Bind, was developed and is maintained by ISC (<emphasis>Internet Software Consortium</emphasis>). It is provided in Debian by the <emphasis role=\"pkg\">bind9</emphasis> package. Version 9 brings two major changes compared to previous versions. First, the DNS server can now run under an unprivileged user, so that a security vulnerability in the server does not grant root privileges to the attacker (as was seen repeatedly with versions 8.x)."
msgstr ""

msgid "Furthermore, Bind supports the DNSSEC standard for signing (and therefore authenticating) DNS records, which allows blocking any spoofing of this data during man-in-the-middle attacks."
msgstr ""

msgid "<primary><emphasis role=\"pkg\">bind9</emphasis></primary>"
msgstr ""

msgid "<primary>ISC</primary>"
msgstr ""

msgid "<primary>Internet Software Consortium</primary>"
msgstr ""

msgid "<emphasis>CULTURE</emphasis> DNSSEC"
msgstr ""

msgid "<primary>DNSSEC</primary>"
msgstr ""

msgid "The DNSSEC norm is quite complex; this partly explains why it is not in widespread usage yet (even if it perfectly coexists with DNS servers unaware of DNSSEC). To understand all the ins and outs, you should check the following article. <ulink type=\"block\" url=\"https://en.wikipedia.org/wiki/Domain_Name_System_Security_Extensions\" />"
msgstr ""

msgid "Configuring bind"
msgstr ""

msgid "Configuration files for <command>bind</command>, irrespective of version, have the same structure."
msgstr ""

msgid "The Falcot administrators created a primary <literal>falcot.com</literal> zone to store information related to this domain, and a <literal>168.192.in-addr.arpa</literal> zone for reverse mapping of IP addresses in the local networks."
msgstr ""

msgid "<emphasis>CAUTION</emphasis> Names of reverse zones"
msgstr ""

msgid "<primary>zone</primary><secondary>reverse</secondary>"
msgstr ""

msgid "<primary>reverse zone</primary>"
msgstr ""

msgid "<primary><literal>in-addr.arpa</literal></primary>"
msgstr ""

msgid "<primary><literal>ip6.arpa</literal></primary>"
msgstr ""

msgid "<primary>nibble format</primary>"
msgstr ""

msgid "Reverse zones have a particular name. The zone covering the <literal>192.168.0.0/16</literal> network needs to be named <literal>168.192.in-addr.arpa</literal>: the IP address components are reversed, and followed by the <literal>in-addr.arpa</literal> suffix."
msgstr ""

msgid "For IPv6 networks, the suffix is <literal>ip6.arpa</literal> and the IP address components which are reversed are each character in the full hexadecimal representation of the IP address. As such, the <literal>2001:0bc8:31a0::/48</literal> network would use a zone named <literal>0.a.1.3.8.c.b.0.1.0.0.2.ip6.arpa</literal>."
msgstr ""

msgid "<emphasis>TIP</emphasis> Testing the DNS server"
msgstr ""

msgid "The <command>host</command> command (in the <emphasis role=\"pkg\">bind9-host</emphasis> package) queries a DNS server, and can be used to test the server configuration. For example, <command>host machine.falcot.com localhost</command> checks the local server's reply for the <literal>machine.falcot.com</literal> query. <command>host <replaceable>ipaddress</replaceable> localhost</command> tests the reverse resolution."
msgstr ""

msgid "<primary><command>host</command></primary>"
msgstr ""

msgid "The following configuration excerpts, taken from the Falcot files, can serve as starting points to configure a DNS server:"
msgstr ""

msgid "<primary><filename>named.conf</filename></primary>"
msgstr ""

msgid "<primary><filename>/etc/bind/named.conf</filename></primary>"
msgstr ""

msgid "Excerpt of <filename>/etc/bind/named.conf.local</filename>"
msgstr ""

msgid ""
"\n"
"zone \"falcot.com\" {\n"
"        type master;\n"
"        file \"/etc/bind/db.falcot.com\";\n"
"        allow-query { any; };\n"
"        allow-transfer {\n"
"                195.20.105.149/32 ; // ns0.xname.org\n"
"                193.23.158.13/32 ; // ns1.xname.org\n"
"        };\n"
"};\n"
"\n"
"zone \"internal.falcot.com\" {\n"
"        type master;\n"
"        file \"/etc/bind/db.internal.falcot.com\";\n"
"        allow-query { 192.168.0.0/16; };\n"
"};\n"
"\n"
"zone \"168.192.in-addr.arpa\" {\n"
"        type master;\n"
"        file \"/etc/bind/db.192.168\";\n"
"        allow-query { 192.168.0.0/16; };\n"
"};"
msgstr ""

msgid "Excerpt of <filename>/etc/bind/db.falcot.com</filename>"
msgstr ""

msgid ""
"; falcot.com Zone \n"
"; admin.falcot.com. =&gt; zone contact: admin@falcot.com\n"
"$TTL    604800\n"
"@       IN      SOA     falcot.com. admin.falcot.com. (\n"
"                        20040121        ; Serial\n"
"                         604800         ; Refresh\n"
"                          86400         ; Retry\n"
"                        2419200         ; Expire\n"
"                         604800 )       ; Negative Cache TTL\n"
";\n"
"; The @ refers to the zone name (\"falcot.com\" here)\n"
"; or to $ORIGIN if that directive has been used\n"
";\n"
"@       IN      NS      ns\n"
"@       IN      NS      ns0.xname.org.\n"
"\n"
"internal IN      NS      192.168.0.2\n"
"\n"
"@       IN      A       212.94.201.10\n"
"@       IN      MX      5 mail\n"
"@       IN      MX      10 mail2\n"
"\n"
"ns      IN      A       212.94.201.10\n"
"mail    IN      A       212.94.201.10\n"
"mail2   IN      A       212.94.201.11\n"
"www     IN      A       212.94.201.11\n"
"\n"
"dns     IN      CNAME   ns"
msgstr ""

msgid "<emphasis>CAUTION</emphasis> Syntax of a name"
msgstr ""

msgid "The syntax of machine names follows strict rules. For instance, <literal>machine</literal> implies <literal>machine.<replaceable>domain</replaceable></literal>. If the domain name should not be appended to a name, said name must be written as <literal>machine.</literal> (with a dot as suffix). Indicating a DNS name outside the current domain therefore requires a syntax such as <literal>machine.otherdomain.com.</literal> (with the final dot)."
msgstr ""

msgid "Excerpt of <filename>/etc/bind/db.192.168</filename>"
msgstr ""

msgid ""
"; Reverse zone for 192.168.0.0/16\n"
"; admin.falcot.com. =&gt; zone contact: admin@falcot.com\n"
"$TTL    604800\n"
"@       IN      SOA     ns.internal.falcot.com. admin.falcot.com. (\n"
"                        20040121        ; Serial\n"
"                         604800         ; Refresh\n"
"                          86400         ; Retry\n"
"                        2419200         ; Expire\n"
"                         604800 )       ; Negative Cache TTL\n"
"\n"
"        IN      NS      ns.internal.falcot.com.\n"
"\n"
"; 192.168.0.1 -&gt; arrakis\n"
"1.0     IN      PTR     arrakis.internal.falcot.com.\n"
"; 192.168.0.2 -&gt; neptune\n"
"2.0     IN      PTR     neptune.internal.falcot.com.\n"
"\n"
"; 192.168.3.1 -&gt; pau\n"
"1.3     IN      PTR     pau.internal.falcot.com."
msgstr ""

msgid "DHCP (for <emphasis>Dynamic Host Configuration Protocol</emphasis>) is a protocol by which a machine can automatically get its network configuration when it boots. This allows centralizing the management of network configurations, and ensuring that all desktop machines get similar settings."
msgstr ""

msgid "<primary>DHCP</primary>"
msgstr "<primary>DHCP</primary>"

msgid "<primary>Dynamic Host Configuration Protocol</primary>"
msgstr ""

msgid "<primary>network</primary><secondary>DHCP configuration</secondary>"
msgstr ""

msgid "A DHCP server provides many network-related parameters. The most common of these is an IP address and the network where the machine belongs, but it can also provide other information, such as DNS servers, WINS servers, NTP servers, and so on."
msgstr ""

msgid "The Internet Software Consortium (also involved in developing <command>bind</command>) is the main author of the DHCP server. The matching Debian package is <emphasis role=\"pkg\">isc-dhcp-server</emphasis>."
msgstr ""

msgid "Configuring"
msgstr ""

msgid "The first elements that need to be edited in the DHCP server configuration files (<filename>/etc/dhcp/dhcpd.conf</filename>, and <filename>/etc/dhcp/dhcpd6.conf</filename> for IPv6) are the domain name and the DNS servers. If this server is alone on the local network (as defined by the broadcast propagation), the <literal>authoritative</literal> directive must also be enabled (or uncommented). One also needs to create a <literal>subnet</literal> section describing the local network and the configuration information to be provided. The following example fits a <literal>192.168.0.0/24</literal> local network with a router at <literal>192.168.0.1</literal> serving as the gateway. Available IP addresses are in the range <literal>192.168.0.128</literal> to <literal>192.168.0.254</literal>."
msgstr ""

msgid "Excerpt of <filename>/etc/dhcp/dhcpd.conf</filename>"
msgstr ""

msgid ""
"\n"
"#\n"
"# Sample configuration file for ISC dhcpd for Debian\n"
"#\n"
"\n"
"# The ddns-updates-style parameter controls whether or not the server will\n"
"# attempt to do a DNS update when a lease is confirmed. We default to the\n"
"# behavior of the version 2 packages ('none', since DHCP v2 didn't\n"
"# have support for DDNS.)\n"
"ddns-update-style interim;\n"
"\n"
"# option definitions common to all supported networks...\n"
"option domain-name \"internal.falcot.com\";\n"
"option domain-name-servers ns.internal.falcot.com;\n"
"\n"
"default-lease-time 600;\n"
"max-lease-time 7200;\n"
"\n"
"# If this DHCP server is the official DHCP server for the local\n"
"# network, the authoritative directive should be uncommented.\n"
"authoritative;\n"
"\n"
"# Use this to send dhcp log messages to a different log file (you also\n"
"# have to hack syslog.conf to complete the redirection).\n"
"log-facility local7;\n"
"\n"
"# My subnet\n"
"subnet 192.168.0.0 netmask 255.255.255.0 {\n"
"    option routers 192.168.0.1;\n"
"    option broadcast-address 192.168.0.255;\n"
"    range 192.168.0.128 192.168.0.254;\n"
"    ddns-domainname \"internal.falcot.com\";\n"
"}"
msgstr ""

msgid "DHCP and DNS"
msgstr ""

msgid "<primary>DNS</primary><secondary>automated updates</secondary>"
msgstr ""

msgid "A nice feature is the automated registering of DHCP clients in the DNS zone, so that each machine gets a significant name (rather than something impersonal such as <literal>machine-192-168-0-131.internal.falcot.com</literal>). Using this feature requires configuring the DNS server to accept updates to the <literal>internal.falcot.com</literal> DNS zone from the DHCP server, and configuring the latter to submit updates for each registration."
msgstr ""

msgid "In the <command>bind</command> case (see <xref linkend=\"sect.dns-software\" />), the <literal>allow-update</literal> directive needs to be added to each of the zones that the DHCP server is to edit (the one for the <literal>internal.falcot.com</literal> domain, and the reverse zone). This directive lists the IP addresses allowed to perform these updates; it should therefore contain the possible addresses of the DHCP server (both the local address and the public address, if appropriate)."
msgstr ""

msgid ""
"\n"
"allow-update { 127.0.0.1 192.168.0.1 212.94.201.10 !any };"
msgstr ""

msgid "Beware! A zone that can be modified <emphasis>will</emphasis> be changed by <command>bind</command>, and the latter will overwrite its configuration files at regular intervals. Since this automated procedure produces files that are less human-readable than manually-written ones, the Falcot administrators handle the <literal>internal.falcot.com</literal> domain with a delegated DNS server; this means the <literal>falcot.com</literal> zone file stays firmly under their manual control."
msgstr ""

msgid "The DHCP server configuration excerpt above already includes the directives required for DNS zone updates: they are the <literal>ddns-update-style interim;</literal> and <literal>ddns-domain-name \"internal.falcot.com\";</literal> lines."
msgstr ""

msgid "Network Diagnosis Tools"
msgstr ""

msgid "When a network application does not run as expected, it is important to be able to look under the hood. Even when everything seems to run smoothly, running a network diagnosis can help ensure everything is working as it should. Several diagnosis tools exists for this purpose; each one operates on a different level."
msgstr ""

msgid "Local Diagnosis: <command>netstat</command>"
msgstr ""

msgid "<primary><command>netstat</command></primary>"
msgstr ""

msgid "Let's first mention the <command>netstat</command> command (in the <emphasis role=\"pkg\">net-tools</emphasis> package); it displays an instant summary of a machine's network activity. When invoked with no argument, this command lists all open connections; this list can be very verbose since it includes many Unix-domain sockets (widely used by daemons) which do not involve the network at all (for example, <literal>dbus</literal> communication, <literal>X11</literal> traffic, and communications between virtual filesystems and the desktop)."
msgstr ""

msgid "Common invocations therefore use options that alter <command>netstat</command>'s behavior. The most frequently used options include:"
msgstr ""

msgid "<literal>-t</literal>, which filters the results to only include TCP connections;"
msgstr ""

msgid "<literal>-u</literal>, which works similarly for UDP connections; these options are not mutually exclusive, and one of them is enough to stop displaying Unix-domain connections;"
msgstr ""

msgid "<literal>-a</literal>, to also list listening sockets (waiting for incoming connections);"
msgstr ""

msgid "<literal>-n</literal>, to display the results numerically: IP addresses (no DNS resolution), port numbers (no aliases as defined in <filename>/etc/services</filename>) and user ids (no login names);"
msgstr ""

msgid "<literal>-p</literal>, to list the processes involved; this option is only useful when <command>netstat</command> is run as root, since normal users will only see their own processes;"
msgstr ""

msgid "<literal>-c</literal>, to continuously refresh the list of connections."
msgstr ""

msgid "Other options, documented in the <citerefentry><refentrytitle>netstat</refentrytitle> <manvolnum>8</manvolnum></citerefentry> manual page, provide an even finer control over the displayed results. In practice, the first five options are so often used together that systems and network administrators practically acquired <command>netstat -tupan</command> as a reflex. Typical results, on a lightly loaded machine, may look like the following:"
msgstr ""

msgid ""
"\n"
"<computeroutput># </computeroutput><userinput>netstat -tupan</userinput>\n"
"<computeroutput>Active Internet connections (servers and established)\n"
"Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name\n"
"tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN      397/rpcbind     \n"
"tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      431/sshd        \n"
"tcp        0      0 0.0.0.0:36568           0.0.0.0:*               LISTEN      407/rpc.statd   \n"
"tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      762/exim4       \n"
"tcp        0    272 192.168.1.242:22        192.168.1.129:44452     ESTABLISHED 1172/sshd: roland [\n"
"tcp6       0      0 :::111                  :::*                    LISTEN      397/rpcbind     \n"
"tcp6       0      0 :::22                   :::*                    LISTEN      431/sshd        \n"
"tcp6       0      0 ::1:25                  :::*                    LISTEN      762/exim4       \n"
"tcp6       0      0 :::35210                :::*                    LISTEN      407/rpc.statd   \n"
"udp        0      0 0.0.0.0:39376           0.0.0.0:*                           916/dhclient    \n"
"udp        0      0 0.0.0.0:996             0.0.0.0:*                           397/rpcbind     \n"
"udp        0      0 127.0.0.1:1007          0.0.0.0:*                           407/rpc.statd   \n"
"udp        0      0 0.0.0.0:68              0.0.0.0:*                           916/dhclient    \n"
"udp        0      0 0.0.0.0:48720           0.0.0.0:*                           451/avahi-daemon: r\n"
"udp        0      0 0.0.0.0:111             0.0.0.0:*                           397/rpcbind     \n"
"udp        0      0 192.168.1.242:123       0.0.0.0:*                           539/ntpd        \n"
"udp        0      0 127.0.0.1:123           0.0.0.0:*                           539/ntpd        \n"
"udp        0      0 0.0.0.0:123             0.0.0.0:*                           539/ntpd        \n"
"udp        0      0 0.0.0.0:5353            0.0.0.0:*                           451/avahi-daemon: r\n"
"udp        0      0 0.0.0.0:39172           0.0.0.0:*                           407/rpc.statd   \n"
"udp6       0      0 :::996                  :::*                                397/rpcbind     \n"
"udp6       0      0 :::34277                :::*                                407/rpc.statd   \n"
"udp6       0      0 :::54852                :::*                                916/dhclient    \n"
"udp6       0      0 :::111                  :::*                                397/rpcbind     \n"
"udp6       0      0 :::38007                :::*                                451/avahi-daemon: r\n"
"udp6       0      0 fe80::5054:ff:fe99::123 :::*                                539/ntpd        \n"
"udp6       0      0 2001:bc8:3a7e:210:a:123 :::*                                539/ntpd        \n"
"udp6       0      0 2001:bc8:3a7e:210:5:123 :::*                                539/ntpd        \n"
"udp6       0      0 ::1:123                 :::*                                539/ntpd        \n"
"udp6       0      0 :::123                  :::*                                539/ntpd        \n"
"udp6       0      0 :::5353                 :::*                                451/avahi-daemon: r\n"
"</computeroutput>"
msgstr ""

msgid "As expected, this lists established connections, two SSH connections in this case, and applications waiting for incoming connections (listed as <literal>LISTEN</literal>), notably the Exim4 email server listening on port 25."
msgstr ""

msgid "Remote Diagnosis: <command>nmap</command>"
msgstr ""

msgid "<primary><command>nmap</command></primary>"
msgstr "<primary><command>nmap</command></primary>"

msgid "<command>nmap</command> (in the similarly-named package) is, in a way, the remote equivalent for <command>netstat</command>. It can scan a set of “well-known” ports for one or several remote servers, and list the ports where an application is found to answer to incoming connections. Furthermore, <command>nmap</command> is able to identify some of these applications, sometimes even their version number. The counterpart of this tool is that, since it runs remotely, it cannot provide information on processes or users; however, it can operate on several targets at once."
msgstr ""

msgid "A typical <command>nmap</command> invocation only uses the <literal>-A</literal> option (so that <command>nmap</command> attempts to identify the versions of the server software it finds) followed by one or more IP addresses or DNS names of machines to scan. Again, many more options exist to finely control the behavior of <command>nmap</command>; please refer to the documentation in the <citerefentry> <refentrytitle>nmap</refentrytitle> <manvolnum>1</manvolnum> </citerefentry> manual page."
msgstr ""

msgid ""
"\n"
"<computeroutput># </computeroutput><userinput>nmap mirtuel</userinput>\n"
"<computeroutput>\n"
"Starting Nmap 7.70 ( https://nmap.org ) at 2019-06-30 21:05 CET\n"
"Nmap scan report for mirtuel (192.168.1.242)\n"
"Host is up (0.000013s latency).\n"
"rDNS record for 192.168.1.242: mirtuel.internal.placard.fr.eu.org\n"
"Not shown: 998 closed ports\n"
"PORT    STATE SERVICE\n"
"22/tcp  open  ssh\n"
"111/tcp open  rpcbind\n"
"\n"
"Nmap done: 1 IP address (1 host up) scanned in 2.41 seconds\n"
"# </computeroutput><userinput>nmap -A localhost</userinput>\n"
"<computeroutput>\n"
"Starting Nmap 7.70 ( https://nmap.org ) at 2019-06-30 21:17 CEST\n"
"Nmap scan report for localhost (127.0.0.1)\n"
"Host is up (0.000039s latency).\n"
"Other addresses for localhost (not scanned): ::1\n"
"Not shown: 997 closed ports\n"
"PORT    STATE SERVICE VERSION\n"
"22/tcp  open  ssh     OpenSSH 7.9p1 Debian 10 (protocol 2.0)\n"
"| ssh-hostkey: \n"
"|   2048 33:a1:d8:b1:e5:5b:b2:0d:15:1b:8e:76:7f:e4:d7:3d (RSA)\n"
"|   256 8f:83:cf:fa:b3:58:54:9a:1d:1b:4c:db:b1:e2:58:76 (ECDSA)\n"
"|_  256 fa:3d:58:62:49:92:93:90:52:fe:f4:26:ca:dc:4c:40 (ED25519)\n"
"25/tcp  open  smtp    Exim smtpd 4.92\n"
"| smtp-commands: mirtuel Hello localhost [127.0.0.1], SIZE 52428800, 8BITMIME, PIPELINING, CHUNKING, PRDR, HELP, \n"
"|_ Commands supported: AUTH HELO EHLO MAIL RCPT DATA BDAT NOOP QUIT RSET HELP \n"
"631/tcp open  ipp     CUPS 2.2\n"
"| http-methods: \n"
"|_  Potentially risky methods: PUT\n"
"| http-robots.txt: 1 disallowed entry \n"
"|_/\n"
"|_http-server-header: CUPS/2.2 IPP/2.1\n"
"|_http-title: Home - CUPS 2.2.10\n"
"Device type: general purpose\n"
"Running: Linux 3.X\n"
"OS CPE: cpe:/o:linux:linux_kernel:3\n"
"OS details: Linux 3.7 - 3.10\n"
"Network Distance: 0 hops\n"
"Service Info: Host: debian; OS: Linux; CPE: cpe:/o:linux:linux_kernel\n"
"\n"
"OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .\n"
"Nmap done: 1 IP address (1 host up) scanned in 12.33 seconds\n"
"</computeroutput>"
msgstr ""

msgid "As expected, the SSH and Exim4 applications are listed. Note that not all applications listen on all IP addresses; since Exim4 is only accessible on the <literal>lo</literal> loopback interface, it only appears during an analysis of <literal>localhost</literal> and not when scanning <literal>mirtuel</literal> (which maps to the <literal>eth0</literal> interface on the same machine)."
msgstr ""

msgid "Sniffers: <command>tcpdump</command> and <command>wireshark</command>"
msgstr ""

msgid "Sometimes, one needs to look at what actually goes on the wire, packet by packet. These cases call for a “frame analyzer”, more widely known as a <emphasis>sniffer</emphasis>. Such a tool observes all the packets that reach a given network interface, and displays them in a user-friendly way."
msgstr ""

msgid "<primary><command>tcpdump</command></primary>"
msgstr ""

msgid "The venerable tool in this domain is <command>tcpdump</command>, available as a standard tool on a wide range of platforms. It allows many kinds of network traffic capture, but the representation of this traffic stays rather obscure. We will therefore not describe it in further detail."
msgstr ""

msgid "<primary><command>wireshark</command></primary>"
msgstr ""

msgid "A more recent (and more modern) tool, <command>wireshark</command> (in the <emphasis role=\"pkg\">wireshark</emphasis> package), has become the new reference in network traffic analysis due to its many decoding modules that allow for a simplified analysis of the captured packets. The packets are displayed graphically with an organization based on the protocol layers. This allows a user to visualize all protocols involved in a packet. For example, given a packet containing an HTTP request, <command>wireshark</command> displays, separately, the information concerning the physical layer, the Ethernet layer, the IP packet information, the TCP connection parameters, and finally the HTTP request itself."
msgstr ""

msgid "The <command>wireshark</command> network traffic analyzer"
msgstr ""

msgid "In our example, the packets traveling over SSH are filtered out (with the <literal>!tcp.port == 22</literal> filter). The packet currently displayed was developed at the transport layer of the SSHv2 protocol."
msgstr ""

msgid "<emphasis>TIP</emphasis> <command>wireshark</command> with no graphical interface: <command>tshark</command>"
msgstr ""

msgid "<primary><command>tshark</command></primary>"
msgstr ""

msgid "When one cannot run a graphical interface, or does not wish to do so for whatever reason, a text-only version of <command>wireshark</command> also exists under the name <command>tshark</command> (in a separate <emphasis role=\"pkg\">tshark</emphasis> package). Most of the capture and decoding features are still available, but the lack of a graphical interface necessarily limits the interactions with the program (filtering packets after they've been captured, tracking of a given TCP connection, and so on). It can still be used as a first approach. If further manipulations are intended and require the graphical interface, the packets can be saved to a file and this file can be loaded into a graphical <command>wireshark</command> running on another machine."
msgstr ""
